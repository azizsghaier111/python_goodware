{
    "imports": [
        "*",
        "_clearcache",
        "listdir",
        "encodings",
        "dyld",
        "pyimod03_importers",
        "warnings",
        "os",
        "DEFAULT_MODE",
        "base64",
        "environ",
        "__doc__",
        "ctypes",
        "sys",
        "LibraryLoader"
    ],
    "function_calls": [
        "NullWriter",
        "_frozen_name",
        "listdir",
        "install",
        "isdir",
        "hasattr",
        "os_path_dirname",
        "basename",
        "rfind",
        "os_listdir",
        "abspath",
        "bytes",
        "exec",
        "insert",
        "join",
        "LibraryLoader",
        "append",
        "len",
        "startswith",
        "os_path_basename",
        "ImportError",
        "b64decode",
        "range",
        "exists"
    ],
    "strings": [
        "",
        "No os specific module found",
        "/\\",
        "/",
        "Failed to load dynlib/dll %r. Most probably this dynlib/dll was not found when the application was frozen.",
        "win",
        "nt",
        "iter_unpack",
        "posix",
        "VIRTUAL_ENV",
        "frozen",
        ":",
        "calcsize",
        "error",
        "\\",
        "eggs",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "",
        "pack_into",
        "PYTHONCASEOK",
        "unpack_from",
        "unpack",
        "darwin",
        "pack",
        "UTF-8",
        "Struct"
    ]
}