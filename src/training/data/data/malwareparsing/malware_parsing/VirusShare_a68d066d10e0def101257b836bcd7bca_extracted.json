{
    "imports": [
        "LibraryLoader",
        "_frozen_importlib",
        "sys",
        "struct",
        "warnings",
        "listdir",
        "os",
        "ctypes",
        "dyld",
        "encodings",
        "environ",
        "_clearcache",
        "imp",
        "pyimod00_crypto_key",
        "marshal",
        "zlib",
        "DEFAULT_MODE",
        "*",
        "_thread",
        "path",
        "thread",
        "__doc__",
        "pyimod03_importers"
    ],
    "function_calls": [
        "__create_cipher",
        "close",
        "__init__",
        "open",
        "LibraryLoader",
        "ArchiveFile",
        "checkmagic",
        "list",
        "int",
        "type",
        "local",
        "dict",
        "insert",
        "unpack",
        "fileno",
        "rfind",
        "write",
        "get_magic",
        "loads",
        "ArchiveReadError",
        "get_ident",
        "ImportError",
        "join",
        "listdir",
        "replace",
        "startswith",
        "hasattr",
        "Cipher",
        "decompress",
        "isdir",
        "abspath",
        "isabs",
        "seek",
        "_import_aesmod",
        "_frozen_name",
        "get",
        "install",
        "exists",
        "print",
        "os_path_basename",
        "range",
        "len",
        "super",
        "NullWriter",
        "zfill",
        "read",
        "append",
        "input",
        "isfile",
        "os_listdir",
        "basename",
        "loadtoc",
        "new",
        "FilePos",
        "os_path_dirname",
        "tell",
        "keys",
        "decrypt"
    ],
    "strings": [
        "",
        "iter_unpack",
        "\\",
        "\n        Get the object corresponding to name, or None.\n        For use with imputil ArchiveImporter, object is a python code object.\n        'name' is the name as specified in an 'import name'.\n        'import a.b' will become:\n        extract('a') (return None because 'a' is not a code object)\n        extract('a.__init__') (return a code object)\n        extract('a.b') (return a code object)\n        Default implementation:\n          self.toc is a dict\n          self.toc[name] is pos\n          self.lib has the code object marshal-ed at pos\n        ",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.osx32.bin...",
        "/\\",
        "UTF-8",
        "Failed to load dynlib/dll %r. Most probably this dynlib/dll was not found when the application was frozen.",
        "\n        Make this class act like a file, by invoking most methods on its\n        underlying file object.\n        ",
        "\n        Return a list of the contents\n        Default implementation assumes self.toc is a dict like object.\n        Not required by ArchiveImporter.\n        ",
        "frozen",
        "!i",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.bin...",
        "crsa.linux.bin",
        "crsa.osx32.bin",
        "== \u041f\u0430\u0442\u0447 crsa.osx32.bin",
        "wb",
        "unpack",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "darwin",
        "crsa",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.linux.bin...",
        "crsa.bin",
        "pack_into",
        "\n    ZlibArchive - an archive with compressed entries. Archive is read\n    from the executable created by PyInstaller.\n\n    This archive is used for bundling python modules inside the executable.\n\n    NOTE: The whole ZlibArchive (PYZ) is compressed so it is not necessary\n          to compress single modules with zlib.\n    ",
        "== \u041f\u0430\u0442\u0447 crsa.bin",
        "Crypto.Cipher._AES",
        "PYZ entry '%s' failed to unmarshal",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "calcsize",
        "\n        Overridable.\n        Check to see if the file object self.lib actually has a file\n        we understand.\n        ",
        "[!] Pinegrow \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0451\u043d, \u043f\u0435\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0435\u0449\u0451 \u0440\u0430\u0437.",
        "unpack_from",
        "\n    This class keeps track of the file object representing and current position\n    in a file.\n    ",
        ":",
        "\n        Close file and record pos.\n        ",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.osx32.bin...",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.osx32.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "eggs",
        "lib",
        "[!] \u041f\u0430\u043f\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0435\u0449\u0451 \u0440\u0430\u0437.",
        "== \u041f\u0430\u0442\u0447 crsa.linux.bin",
        "\n        Tries to import the AES module from PyCrypto.\n\n        PyCrypto 2.4 and 2.6 uses different name of the AES extension.\n        ",
        "PYTHONCASEOK",
        "nt",
        "\n        Initialize an Archive. If path is omitted, it will be an empty Archive.\n        ",
        "VIRTUAL_ENV",
        "%s has version mismatch to dll",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.linux.bin...",
        "error",
        "\n        Overridable.\n        Default: After magic comes an int (4 byte native) giving the\n        position of the TOC within self.lib.\n        Default: The TOC is a marshal-able string.\n        ",
        "[i] \u0417\u0430\u043f\u0438\u0441\u044c crsa.linux.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "%s is not a valid %s archive file",
        "[?] \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0443\u0442\u044c \u0434\u043e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0441 Pinegrow: ",
        "[i] \u0417\u0430\u043c\u0435\u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0445...",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.osx32.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.linux.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "No os specific module found",
        "Struct",
        "posix",
        "\n        Open file and seek to pos record from last close.\n        ",
        "\n        Return an instance of FilePos for the current thread. This is a crude\n        # re-implementation of threading.local, which isn't a built-in module\n        # and therefore isn't available.\n        ",
        "\n    A base class for a repository of python code objects.\n    The extract method is used by imputil.ArchiveImporter\n    to get code objects by name (fully qualified name), so\n    an enduser \"import a.b\" would become\n      extract('a.__init__')\n      extract('a.b')\n    ",
        "win",
        "?",
        "rb",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.bin...\u0433\u043e\u0442\u043e\u0432\u043e",
        "[s] \u0413\u043e\u0442\u043e\u0432\u043e! \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u044c \u0438 \u043d\u0430\u043f\u0438\u0448\u0438 \u0432 \u0442\u0435\u043c\u0443, \u0447\u0442\u043e \u0443 \u0442\u0435\u0431\u044f \u0432\u0441\u0451 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u041d\u0443 \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430!",
        "pack",
        "/",
        "\r",
        "end",
        "[i] \u0427\u0442\u0435\u043d\u0438\u0435 crsa.bin...",
        "\n---------------------------\n\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435: Pinegrow\n\u0412\u0435\u0440\u0441\u0438\u044f: \u043b\u044e\u0431\u0430\u044f\n\u0422\u0438\u043f: \u043f\u0430\u0442\u0447\n\u0424\u0430\u0439\u043b(\u044b): lib/crsa/crsa.bin, lib/crsa/crsa-*.bin\n\u0410\u0432\u0442\u043e\u0440: Blodwedd\n---------------------------\n",
        "\n    File class support auto open when access member from file object\n    This class is use to avoid file locking on windows\n    ",
        "\n    This class is used only to decrypt Python modules.\n    "
    ]
}