{
    "imports": [
        "listdir",
        "os",
        "ctypes",
        "Shodan",
        "_clearcache",
        "LibraryLoader",
        "dyld",
        "__doc__",
        "encodings",
        "warnings",
        "pyimod03_importers",
        "environ",
        "Tk",
        "config",
        "sys",
        "DEFAULT_MODE",
        "*"
    ],
    "function_calls": [
        "LibraryLoader",
        "geometry",
        "insert",
        "FileNotFoundError",
        "rfind",
        "join",
        "ImportError",
        "listdir",
        "startswith",
        "hasattr",
        "loadConfig",
        "runAsApplication",
        "isdir",
        "abspath",
        "_frozen_name",
        "install",
        "exists",
        "iconbitmap",
        "os_path_basename",
        "range",
        "len",
        "NullWriter",
        "mainloop",
        "append",
        "os_listdir",
        "basename",
        "title",
        "Shodan",
        "pack",
        "os_path_dirname",
        "Tk"
    ],
    "strings": [
        "",
        "iter_unpack",
        "\\",
        "/\\",
        "UTF-8",
        "Failed to load dynlib/dll %r. Most probably this dynlib/dll was not found when the application was frozen.",
        "_MEIPASS",
        "frozen",
        "TCL_LIBRARY",
        "unpack",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "darwin",
        "pack_into",
        "icon.ico",
        "calcsize",
        "340x340",
        "unpack_from",
        ":",
        "config",
        "eggs",
        "expand",
        "VIRTUAL_ENV",
        "PYTHONCASEOK",
        "nt",
        "Tk data directory \"%s\" not found.",
        "tcl",
        "error",
        "System Check",
        "No os specific module found",
        "__main__",
        "mode",
        "Struct",
        "EAJ65T9SIAvZIMa1",
        "posix",
        "win",
        "TK_LIBRARY",
        "public",
        "tk",
        "Tcl data directory \"%s\" not found.",
        "pack",
        "/",
        "fill",
        "both",
        "config.json"
    ]
}