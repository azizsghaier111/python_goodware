{
    "imports": [
        "LibraryLoader",
        "_frozen_importlib",
        "webdriver",
        "sys",
        "struct",
        "warnings",
        "hashlib",
        "listdir",
        "os",
        "ctypes",
        "time",
        "dyld",
        "encodings",
        "environ",
        "requests",
        "_clearcache",
        "imp",
        "pyimod00_crypto_key",
        "marshal",
        "zlib",
        "DEFAULT_MODE",
        "*",
        "_thread",
        "thread",
        "__doc__",
        "pyimod03_importers",
        "ssl"
    ],
    "function_calls": [
        "__create_cipher",
        "close",
        "__init__",
        "write",
        "open",
        "sleep",
        "LibraryLoader",
        "split",
        "ArchiveFile",
        "checkmagic",
        "list",
        "int",
        "type",
        "local",
        "dict",
        "clear",
        "insert",
        "unpack",
        "fileno",
        "rfind",
        "ChromeOptions",
        "get_attribute",
        "get_magic",
        "loads",
        "ArchiveReadError",
        "get_ident",
        "ImportError",
        "join",
        "listdir",
        "quit",
        "submit",
        "md5",
        "startswith",
        "hexdigest",
        "hasattr",
        "Cipher",
        "decompress",
        "isdir",
        "abspath",
        "isabs",
        "rstrip",
        "seek",
        "_import_aesmod",
        "_frozen_name",
        "send_keys",
        "get",
        "find",
        "install",
        "exists",
        "print",
        "os_path_basename",
        "range",
        "len",
        "find_element_by_tag_name",
        "super",
        "NullWriter",
        "zfill",
        "read",
        "append",
        "find_elements_by_class_name",
        "os_listdir",
        "basename",
        "add_argument",
        "find_element_by_class_name",
        "readlines",
        "loadtoc",
        "new",
        "execute_script",
        "FilePos",
        "get_default_verify_paths",
        "os_path_dirname",
        "tell",
        "Chrome",
        "keys",
        "decrypt"
    ],
    "strings": [
        "",
        "iter_unpack",
        "Failed to load dynlib/dll %r. Most probably this dynlib/dll was not found when the application was frozen.",
        "!i",
        "Enter the last letter",
        "wb",
        "\nSet up 'os' and 'os.path' module replacement functions for use during import\nbootstrap.\n",
        "Enter the colour",
        "</span></p><p><span style='color: #ff0000;'>Za moment bot zacznie prac\u0119.</span></p></h1>",
        "calcsize",
        "Answer the following",
        "\n    This class keeps track of the file object representing and current position\n    in a file.\n    ",
        "Czekam jeszcze 40 sekund",
        ".\\slowniki\\hood.txt",
        "./slowniki/minus.png",
        "VIRTUAL_ENV",
        ".\\slowniki\\country.txt",
        "col-lg-5",
        "./slowniki/country.png",
        "  ",
        "title",
        "Struct",
        "\n        Open file and seek to pos record from last close.\n        ",
        "\n    A base class for a repository of python code objects.\n    The extract method is used by imputil.ArchiveImporter\n    to get code objects by name (fully qualified name), so\n    an enduser \"import a.b\" would become\n      extract('a.__init__')\n      extract('a.b')\n    ",
        "Enter the from the following list",
        "r",
        "SSL_CERT_FILE",
        "cacert.pem",
        "ID.txt",
        "\\",
        "..... 30 sekund",
        "/\\",
        "\n        Return a list of the contents\n        Default implementation assumes self.toc is a dict like object.\n        Not required by ArchiveImporter.\n        ",
        "x",
        "unpack",
        "pack_into",
        ".\\driver\\chromedriver.exe",
        "Crypto.Cipher._AES",
        "PYZ entry '%s' failed to unmarshal",
        ".\\slowniki\\colour.txt",
        "eggs",
        "Szukam...",
        "..... 10 sekund",
        "nt",
        "%s has version mismatch to dll",
        "..... 20 sekund",
        "%s is not a valid %s archive file",
        "outerHTML",
        "user-data-dir=./chromeprofile",
        "posix",
        "\n        Return an instance of FilePos for the current thread. This is a crude\n        # re-implementation of threading.local, which isn't a built-in module\n        # and therefore isn't available.\n        ",
        "win",
        "src",
        "certifi",
        ": ",
        "./slowniki/food.png",
        "arguments[0].insertAdjacentHTML('afterEnd', arguments[1])",
        "\n    This class is used only to decrypt Python modules.\n    ",
        "user-data-dir=./ext",
        "profile.default_content_setting_values.notifications",
        "img",
        "png\">",
        "darwin",
        "--ignore-certificate-errors",
        "executable_path",
        "./slowniki/animal.txt",
        "\n    ZlibArchive - an archive with compressed entries. Archive is read\n    from the executable created by PyInstaller.\n\n    This archive is used for bundling python modules inside the executable.\n\n    NOTE: The whole ZlibArchive (PYZ) is compressed so it is not necessary\n          to compress single modules with zlib.\n    ",
        "--disable-notifications",
        "Enter the first 3 letters",
        "unpack_from",
        "<hr /><h1><span style='color: #ffcc00;'>Konfiguracja bota</span><p>U\u017cytkownik: <span style='color: #ffff00;'>",
        ":",
        "alert-success",
        "./slowniki/animal.png",
        "\n        Tries to import the AES module from PyCrypto.\n\n        PyCrypto 2.4 and 2.6 uses different name of the AES extension.\n        ",
        "\n        Overridable.\n        Default: After magic comes an int (4 byte native) giving the\n        position of the TOC within self.lib.\n        Default: The TOC is a marshal-able string.\n        ",
        "</span><br>Wybrana waluta: <span style='color: #ffff00;'>",
        "No os specific module found",
        "Today: 0",
        "./slowniki/coto.png",
        "?",
        "https://forumcoin.win/",
        "pack",
        "--disable-network-portal-notification",
        "clavimb-butvton",
        "\n    File class support auto open when access member from file object\n    This class is use to avoid file locking on windows\n    ",
        "\n        Get the object corresponding to name, or None.\n        For use with imputil ArchiveImporter, object is a python code object.\n        'name' is the name as specified in an 'import name'.\n        'import a.b' will become:\n        extract('a') (return None because 'a' is not a code object)\n        extract('a.__init__') (return a code object)\n        extract('a.b') (return a code object)\n        Default implementation:\n          self.toc is a dict\n          self.toc[name] is pos\n          self.lib has the code object marshal-ed at pos\n        ",
        "UTF-8",
        "Ustawiona waluta: ",
        "\n        Make this class act like a file, by invoking most methods on its\n        underlying file object.\n        ",
        "frozen",
        "<img",
        "./slowniki/plusminus.png",
        "/?r=EC-UserId-18850",
        "\n        Overridable.\n        Check to see if the file object self.lib actually has a file\n        we understand.\n        ",
        "\n        Close file and record pos.\n        ",
        "PYTHONCASEOK",
        "\n        Initialize an Archive. If path is omitted, it will be an empty Archive.\n        ",
        ".",
        "form-control",
        "error",
        "U\u017cytkownik: ",
        "Enter the first 4 letters",
        "rb",
        "/",
        "<p>&nbsp;</p><hr /><h1><span style=\"color: #ff6600;\">Pierwsze uruchomienie bota- zachowaj kolejno\u015b\u0107</span></h1><br><br><h2 style=\"text-align: left;\"><span style=\"color: #ffff99; background-color: #000000;\">1. Zainstaluj uBlock na tej przegladarce. <a style=\"color: #ffff99; background-color: #000000;\" href=\"https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm?hl=pl\" target=\"blank\">LINK</a>&nbsp;</span></h2><h2 style=\"text-align: left;\"><span style=\"color: #ffff99; background-color: #000000;\">2. Otw&oacute;rz opcje uBlocka i wejd\u017a w \"Moje filtry\", potem wybierz \"Importuj i do\u0142\u0105cz\" i wska\u017c plik \"<code>ublock-statyczne-filtry.txt</code>\" z katalogu z botem (faucet jest inwazyjny je\u015bli chodzi o reklamy i trzeba je ograniczy\u0107 a wi\u0119c obej\u015b\u0107 blokad\u0119 adblocka)</span></h2><h2 style=\"text-align: left;\"><span style=\"color: #ffff99; background-color: #000000;\">3. Otw&oacute;rz w Notatniku plik \"<code>ID.txt</code>\"</span></h2><ul style=\"text-align: left;\"><li><h2><span style=\"color: #ffff99; background-color: #000000;\">W pierwszej linii wpisz sw&oacute;j EC-UserId z ExpressCrypto.io</span></h2></li><li><h2><span style=\"color: #ffff99; background-color: #000000;\">W drugiej linii wpisz symbol waluty, kt&oacute;ry chcesz zbiera\u0107. Jeden z poni\u017cszych: <br /><span style=\"color: #ff00ff;\">bch, bcn, ada, dash, dgb, doge, eth, etc, kmd, lsk, ltc, xmr, neo, pivx, pot, pcc, xrp, strat, xtz, trx, vtc, waves, zec</span></span></h2></li></ul><h2 style=\"text-align: left;\"><span style=\"color: #ffff99; background-color: #000000;\">4. Zamknij bota i uruchom ponownie.</span></h2><hr />",
        "--disabled-new-style-notification",
        "Koniec pracy. ",
        "options"
    ]
}