{"imports": ["qiskit", "pyplot", "QuantumCircuit", "transpile", "Aer", "IBMQ", "execute", "job_monitor", "plot_histogram", "NoiseModel", "FakeVigo", "least_busy", "Parameter", "COBYLA", "PauliSumOp", "StateFn", "AerPauliExpectation", "QuantumInstance", "VQE"], "function_calls": ["get_backend", "execute", "result", "get_counts", "load_account", "least_busy", "transpile", "run", "job_monitor", "result", "Parameter", "QuantumCircuit", "range", "get_backend", "execute", "get_counts", "plot_histogram", "show", "FakeVigo", "from_backend", "noisy_simulation", "plot_histogram", "show", "get_counts", "plot_histogram", "show", "from_list", "convert", "print", "COBYLA", "QuantumInstance", "VQE", "print", "save_account", "prepare_circuits", "main_circuit_execution", "variational_quantum_eigensolver", "main", "backends", "h", "get_backend", "result", "execute_on_IBMQ", "AerPauliExpectation", "StateFn", "compute_minimum_eigenvalue", "StateFn"], "strings": ["__main__", "qasm_simulator", "\u03b8", "qasm_simulator", "Ideal Quantum Circuit Execution", "Noisy Quantum Circuit Simulation", "Execution on IBM Q Network", "Expectation Value: ", "The minimum eigenvalue computed with VQE method: ", "YOUR IBM Q TOKEN HERE", "statevector_simulator", "basis_gates", "noise_model", "title", "title", "title", "maxiter", "backend", "ansatz", "optimizer", "quantum_instance", "operational", "simulator", "Z", "X", "operator"]}