{"imports": ["logging", "TFT5EncoderModel", "TFT5ForConditionalGeneration", "TFT5Model", "MT5Config"], "function_calls": ["get_logger"], "strings": [" Tensorflow mT5 model.", "T5Config", "\n    This class overrides [`TFT5Model`]. Please check the superclass for the appropriate documentation alongside usage\n    examples.\n\n    Examples:\n\n    ```python\n    >>> from transformers import TFMT5Model, AutoTokenizer\n\n    >>> model = TFMT5Model.from_pretrained(\"google/mt5-small\")\n    >>> tokenizer = AutoTokenizer.from_pretrained(\"google/mt5-small\")\n    >>> article = \"UN Offizier sagt, dass weiter verhandelt werden muss in Syrien.\"\n    >>> summary = \"Weiter Verhandlung in Syrien.\"\n    >>> inputs = tokenizer(article, return_tensors=\"tf\")\n    >>> labels = tokenizer(text_target=summary, return_tensors=\"tf\")\n\n    >>> outputs = model(input_ids=inputs[\"input_ids\"], decoder_input_ids=labels[\"input_ids\"])\n    >>> hidden_states = outputs.last_hidden_state\n    ```", "mt5", "\n    This class overrides [`TFT5ForConditionalGeneration`]. Please check the superclass for the appropriate\n    documentation alongside usage examples.\n\n    Examples:\n\n    ```python\n    >>> from transformers import TFMT5ForConditionalGeneration, AutoTokenizer\n\n    >>> model = TFMT5ForConditionalGeneration.from_pretrained(\"google/mt5-small\")\n    >>> tokenizer = AutoTokenizer.from_pretrained(\"google/mt5-small\")\n    >>> article = \"UN Offizier sagt, dass weiter verhandelt werden muss in Syrien.\"\n    >>> summary = \"Weiter Verhandlung in Syrien.\"\n    >>> inputs = tokenizer(article, text_target=summary, return_tensors=\"tf\")\n\n    >>> outputs = model(**inputs)\n    >>> loss = outputs.loss\n    ```", "mt5", "\n    This class overrides [`TFT5EncoderModel`]. Please check the superclass for the appropriate documentation alongside\n    usage examples.\n\n    Examples:\n\n    ```python\n    >>> from transformers import TFMT5EncoderModel, AutoTokenizer\n\n    >>> model = TFMT5EncoderModel.from_pretrained(\"google/mt5-small\")\n    >>> tokenizer = AutoTokenizer.from_pretrained(\"google/mt5-small\")\n    >>> article = \"UN Offizier sagt, dass weiter verhandelt werden muss in Syrien.\"\n    >>> input_ids = tokenizer(article, return_tensors=\"tf\").input_ids\n    >>> outputs = model(input_ids)\n    >>> hidden_state = outputs.last_hidden_state\n    ```", "mt5"]}