{"imports": ["sys", "enum_type_wrapper", "descriptor", "message", "reflection", "symbol_database", "descriptor_pb2"], "function_calls": ["Default", "FileDescriptor", "RegisterFileDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumTypeWrapper", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "EnumDescriptor", "RegisterEnumDescriptor", "encode", "_b", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor", "EnumValueDescriptor"], "strings": ["caffe.proto", "caffe", "proto2", "Phase", "caffe.Phase", "VarianceNorm", "caffe.FillerParameter.VarianceNorm", "SnapshotFormat", "caffe.SolverParameter.SnapshotFormat", "SolverMode", "caffe.SolverParameter.SolverMode", "SolverType", "caffe.SolverParameter.SolverType", "DimCheckMode", "caffe.ParamSpec.DimCheckMode", "NormalizationMode", "caffe.LossParameter.NormalizationMode", "Engine", "caffe.ConvolutionParameter.Engine", "DB", "caffe.DataParameter.DB", "EltwiseOp", "caffe.EltwiseParameter.EltwiseOp", "Norm", "caffe.HingeLossParameter.Norm", "NormRegion", "caffe.LRNParameter.NormRegion", "Engine", "caffe.LRNParameter.Engine", "PoolMethod", "caffe.PoolingParameter.PoolMethod", "Engine", "caffe.PoolingParameter.Engine", "ReductionOp", "caffe.ReductionParameter.ReductionOp", "Engine", "caffe.ReLUParameter.Engine", "Engine", "caffe.SigmoidParameter.Engine", "Engine", "caffe.SoftmaxParameter.Engine", "Engine", "caffe.TanHParameter.Engine", "PoolMethod", "caffe.SPPParameter.PoolMethod", "Engine", "caffe.SPPParameter.Engine", "DimCheckMode", "caffe.V1LayerParameter.DimCheckMode", "PoolMethod", "caffe.V0LayerParameter.PoolMethod", "latin1", "\n\u000bcaffe.proto\u0012\u0005caffe\"\u001c\n\tBlobShape\u0012\u000f\n\u0003dim\u0018\u0001 \u0003(\u0003B\u0002\u0010\u0001\"\u00cc\u0001\n\tBlobProto\u0012\u001f\n\u0005shape\u0018\u0007 \u0001(\u000b2\u0010.caffe.BlobShape\u0012\u0010\n\u0004data\u0018\u0005 \u0003(\u0002B\u0002\u0010\u0001\u0012\u0010\n\u0004diff\u0018\u0006 \u0003(\u0002B\u0002\u0010\u0001\u0012\u0017\n\u000bdouble_data\u0018\b \u0003(\u0001B\u0002\u0010\u0001\u0012\u0017\n\u000bdouble_diff\u0018\t \u0003(\u0001B\u0002\u0010\u0001\u0012\u000e\n\u0003num\u0018\u0001 \u0001(\u0005:\u00010\u0012\u0013\n\bchannels\u0018\u0002 \u0001(\u0005:\u00010\u0012\u0011\n\u0006height\u0018\u0003 \u0001(\u0005:\u00010\u0012\u0010\n\u0005width\u0018\u0004 \u0001(\u0005:\u00010\"2\n\u000fBlobProtoVector\u0012\u001f\n\u0005blobs\u0018\u0001 \u0003(\u000b2\u0010.caffe.BlobProto\"\u0081\u0001\n\u0005Datum\u0012\u0010\n\bchannels\u0018\u0001 \u0001(\u0005\u0012\u000e\n\u0006height\u0018\u0002 \u0001(\u0005\u0012\r\n\u0005width\u0018\u0003 \u0001(\u0005\u0012\f\n\u0004data\u0018\u0004 \u0001(\f\u0012\r\n\u0005label\u0018\u0005 \u0001(\u0005\u0012\u0012\n\nfloat_data\u0018\u0006 \u0003(\u0002\u0012\u0016\n\u0007encoded\u0018\u0007 \u0001(\b:\u0005false\"\u008a\u0002\n\u000fFillerParameter\u0012\u0016\n\u0004type\u0018\u0001 \u0001(\t:\bconstant\u0012\u0010\n\u0005value\u0018\u0002 \u0001(\u0002:\u00010\u0012\u000e\n\u0003min\u0018\u0003 \u0001(\u0002:\u00010\u0012\u000e\n\u0003max\u0018\u0004 \u0001(\u0002:\u00011\u0012\u000f\n\u0004mean\u0018\u0005 \u0001(\u0002:\u00010\u0012\u000e\n\u0003std\u0018\u0006 \u0001(\u0002:\u00011\u0012\u0012\n\u0006sparse\u0018\u0007 \u0001(\u0005:\u0002-1\u0012B\n\rvariance_norm\u0018\b \u0001(\u000e2#.caffe.FillerParameter.VarianceNorm:\u0006FAN_IN\"4\n\fVarianceNorm\u0012\n\n\u0006FAN_IN\u0010\u0000\u0012\u000b\n\u0007FAN_OUT\u0010\u0001\u0012\u000b\n\u0007AVERAGE\u0010\u0002\"\u008e\u0002\n\fNetParameter\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\r\n\u0005input\u0018\u0003 \u0003(\t\u0012%\n\u000binput_shape\u0018\b \u0003(\u000b2\u0010.caffe.BlobShape\u0012\u0011\n\tinput_dim\u0018\u0004 \u0003(\u0005\u0012\u001d\n\u000eforce_backward\u0018\u0005 \u0001(\b:\u0005false\u0012\u001e\n\u0005state\u0018\u0006 \u0001(\u000b2\u000f.caffe.NetState\u0012\u0019\n\ndebug_info\u0018\u0007 \u0001(\b:\u0005false\u0012$\n\u0005layer\u0018d \u0003(\u000b2\u0015.caffe.LayerParameter\u0012'\n\u0006layers\u0018\u0002 \u0003(\u000b2\u0017.caffe.V1LayerParameter\"\u009c\n\n\u000fSolverParameter\u0012\u000b\n\u0003net\u0018\u0018 \u0001(\t\u0012&\n\tnet_param\u0018\u0019 \u0001(\u000b2\u0013.caffe.NetParameter\u0012\u0011\n\ttrain_net\u0018\u0001 \u0001(\t\u0012\u0010\n\btest_net\u0018\u0002 \u0003(\t\u0012,\n\u000ftrain_net_param\u0018\u0015 \u0001(\u000b2\u0013.caffe.NetParameter\u0012+\n\u000etest_net_param\u0018\u0016 \u0003(\u000b2\u0013.caffe.NetParameter\u0012$\n\u000btrain_state\u0018\u001a \u0001(\u000b2\u000f.caffe.NetState\u0012#\n\ntest_state\u0018\u001b \u0003(\u000b2\u000f.caffe.NetState\u0012\u0011\n\ttest_iter\u0018\u0003 \u0003(\u0005\u0012\u0018\n\rtest_interval\u0018\u0004 \u0001(\u0005:\u00010\u0012 \n\u0011test_compute_loss\u0018\u0013 \u0001(\b:\u0005false\u0012!\n\u0013test_initialization\u0018  \u0001(\b:\u0004true\u0012\u000f\n\u0007base_lr\u0018\u0005 \u0001(\u0002\u0012\u000f\n\u0007display\u0018\u0006 \u0001(\u0005\u0012\u0017\n\faverage_loss\u0018! \u0001(\u0005:\u00011\u0012\u0010\n\bmax_iter\u0018\u0007 \u0001(\u0005\u0012\u0014\n\titer_size\u0018$ \u0001(\u0005:\u00011\u0012\u0011\n\tlr_policy\u0018\b \u0001(\t\u0012\r\n\u0005gamma\u0018\t \u0001(\u0002\u0012\r\n\u0005power\u0018\n \u0001(\u0002\u0012\u0010\n\bmomentum\u0018\u000b \u0001(\u0002\u0012\u0014\n\fweight_decay\u0018\f \u0001(\u0002\u0012\u001f\n\u0013regularization_type\u0018\u001d \u0001(\t:\u0002L2\u0012\u0010\n\bstepsize\u0018\r \u0001(\u0005\u0012\u0011\n\tstepvalue\u0018\" \u0003(\u0005\u0012\u001a\n\u000eclip_gradients\u0018# \u0001(\u0002:\u0002-1\u0012\u0013\n\bsnapshot\u0018\u000e \u0001(\u0005:\u00010\u0012\u0017\n\u000fsnapshot_prefix\u0018\u000f \u0001(\t\u0012\u001c\n\rsnapshot_diff\u0018\u0010 \u0001(\b:\u0005false\u0012K\n\u000fsnapshot_format\u0018% \u0001(\u000e2%.caffe.SolverParameter.SnapshotFormat:\u000bBINARYPROTO\u0012;\n\u000bsolver_mode\u0018\u0011 \u0001(\u000e2!.caffe.SolverParameter.SolverMode:\u0003GPU\u0012\u0014\n\tdevice_id\u0018\u0012 \u0001(\u0005:\u00010\u0012\u0017\n\u000brandom_seed\u0018\u0014 \u0001(\u0003:\u0002-1\u0012\u0011\n\u0004type\u0018( \u0001(\t:\u0003SGD\u0012\u0014\n\u0005delta\u0018\u001f \u0001(\u0002:\u00051e-08\u0012\u0018\n\tmomentum2\u0018' \u0001(\u0002:\u00050.999\u0012\u0011\n\trms_decay\u0018& \u0001(\u0002\u0012\u0019\n\ndebug_info\u0018\u0017 \u0001(\b:\u0005false\u0012\"\n\u0014snapshot_after_train\u0018\u001c \u0001(\b:\u0004true\u0012;\n\u000bsolver_type\u0018\u001e \u0001(\u000e2!.caffe.SolverParameter.SolverType:\u0003SGD\"+\n\u000eSnapshotFormat\u0012\b\n\u0004HDF5\u0010\u0000\u0012\u000f\n\u000bBINARYPROTO\u0010\u0001\"\u001e\n\nSolverMode\u0012\u0007\n\u0003CPU\u0010\u0000\u0012\u0007\n\u0003GPU\u0010\u0001\"U\n\nSolverType\u0012\u0007\n\u0003SGD\u0010\u0000\u0012\f\n\bNESTEROV\u0010\u0001\u0012\u000b\n\u0007ADAGRAD\u0010\u0002\u0012\u000b\n\u0007RMSPROP\u0010\u0003\u0012\f\n\bADADELTA\u0010\u0004\u0012\b\n\u0004ADAM\u0010\u0005\"l\n\u000bSolverState\u0012\f\n\u0004iter\u0018\u0001 \u0001(\u0005\u0012\u0013\n\u000blearned_net\u0018\u0002 \u0001(\t\u0012!\n\u0007history\u0018\u0003 \u0003(\u000b2\u0010.caffe.BlobProto\u0012\u0017\n\fcurrent_step\u0018\u0004 \u0001(\u0005:\u00010\"N\n\bNetState\u0012!\n\u0005phase\u0018\u0001 \u0001(\u000e2\f.caffe.Phase:\u0004TEST\u0012\u0010\n\u0005level\u0018\u0002 \u0001(\u0005:\u00010\u0012\r\n\u0005stage\u0018\u0003 \u0003(\t\"s\n\fNetStateRule\u0012\u001b\n\u0005phase\u0018\u0001 \u0001(\u000e2\f.caffe.Phase\u0012\u0011\n\tmin_level\u0018\u0002 \u0001(\u0005\u0012\u0011\n\tmax_level\u0018\u0003 \u0001(\u0005\u0012\r\n\u0005stage\u0018\u0004 \u0003(\t\u0012\u0011\n\tnot_stage\u0018\u0005 \u0003(\t\"\u00a3\u0001\n\tParamSpec\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00121\n\nshare_mode\u0018\u0002 \u0001(\u000e2\u001d.caffe.ParamSpec.DimCheckMode\u0012\u0012\n\u0007lr_mult\u0018\u0003 \u0001(\u0002:\u00011\u0012\u0015\n\ndecay_mult\u0018\u0004 \u0001(\u0002:\u00011\"*\n\fDimCheckMode\u0012\n\n\u0006STRICT\u0010\u0000\u0012\u000e\n\nPERMISSIVE\u0010\u0001\"\u00c0\u0012\n\u000eLayerParameter\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\f\n\u0004type\u0018\u0002 \u0001(\t\u0012\u000e\n\u0006bottom\u0018\u0003 \u0003(\t\u0012\u000b\n\u0003top\u0018\u0004 \u0003(\t\u0012\u001b\n\u0005phase\u0018\n \u0001(\u000e2\f.caffe.Phase\u0012\u0013\n\u000bloss_weight\u0018\u0005 \u0003(\u0002\u0012\u001f\n\u0005param\u0018\u0006 \u0003(\u000b2\u0010.caffe.ParamSpec\u0012\u001f\n\u0005blobs\u0018\u0007 \u0003(\u000b2\u0010.caffe.BlobProto\u0012\u0016\n\u000epropagate_down\u0018\u000b \u0003(\b\u0012$\n\u0007include\u0018\b \u0003(\u000b2\u0013.caffe.NetStateRule\u0012$\n\u0007exclude\u0018\t \u0003(\u000b2\u0013.caffe.NetStateRule\u00127\n\u000ftransform_param\u0018d \u0001(\u000b2\u001e.caffe.TransformationParameter\u0012(\n\nloss_param\u0018e \u0001(\u000b2\u0014.caffe.LossParameter\u00120\n\u000eaccuracy_param\u0018f \u0001(\u000b2\u0018.caffe.AccuracyParameter\u0012,\n\fargmax_param\u0018g \u0001(\u000b2\u0016.caffe.ArgMaxParameter\u00124\n\u0010batch_norm_param\u0018\u008b\u0001 \u0001(\u000b2\u0019.caffe.BatchNormParameter\u0012)\n\nbias_param\u0018\u008d\u0001 \u0001(\u000b2\u0014.caffe.BiasParameter\u0012,\n\fconcat_param\u0018h \u0001(\u000b2\u0016.caffe.ConcatParameter\u0012?\n\u0016contrastive_loss_param\u0018i \u0001(\u000b2\u001f.caffe.ContrastiveLossParameter\u00126\n\u0011convolution_param\u0018j \u0001(\u000b2\u001b.caffe.ConvolutionParameter\u0012(\n\ndata_param\u0018k \u0001(\u000b2\u0014.caffe.DataParameter\u0012.\n\rdropout_param\u0018l \u0001(\u000b2\u0017.caffe.DropoutParameter\u00123\n\u0010dummy_data_param\u0018m \u0001(\u000b2\u0019.caffe.DummyDataParameter\u0012.\n\reltwise_param\u0018n \u0001(\u000b2\u0017.caffe.EltwiseParameter\u0012'\n\telu_param\u0018\u008c\u0001 \u0001(\u000b2\u0013.caffe.ELUParameter\u0012+\n\u000bembed_param\u0018\u0089\u0001 \u0001(\u000b2\u0015.caffe.EmbedParameter\u0012&\n\texp_param\u0018o \u0001(\u000b2\u0013.caffe.ExpParameter\u0012/\n\rflatten_param\u0018\u0087\u0001 \u0001(\u000b2\u0017.caffe.FlattenParameter\u00121\n\u000fhdf5_data_param\u0018p \u0001(\u000b2\u0018.caffe.HDF5DataParameter\u00125\n\u0011hdf5_output_param\u0018q \u0001(\u000b2\u001a.caffe.HDF5OutputParameter\u00123\n\u0010hinge_loss_param\u0018r \u0001(\u000b2\u0019.caffe.HingeLossParameter\u00123\n\u0010image_data_param\u0018s \u0001(\u000b2\u0019.caffe.ImageDataParameter\u00129\n\u0013infogain_loss_param\u0018t \u0001(\u000b2\u001c.caffe.InfogainLossParameter\u00129\n\u0013inner_product_param\u0018u \u0001(\u000b2\u001c.caffe.InnerProductParameter\u0012'\n\tlog_param\u0018\u0086\u0001 \u0001(\u000b2\u0013.caffe.LogParameter\u0012&\n\tlrn_param\u0018v \u0001(\u000b2\u0013.caffe.LRNParameter\u00125\n\u0011memory_data_param\u0018w \u0001(\u000b2\u001a.caffe.MemoryDataParameter\u0012&\n\tmvn_param\u0018x \u0001(\u000b2\u0013.caffe.MVNParameter\u0012.\n\rpooling_param\u0018y \u0001(\u000b2\u0017.caffe.PoolingParameter\u0012*\n\u000bpower_param\u0018z \u0001(\u000b2\u0015.caffe.PowerParameter\u0012+\n\u000bprelu_param\u0018\u0083\u0001 \u0001(\u000b2\u0015.caffe.PReLUParameter\u0012-\n\fpython_param\u0018\u0082\u0001 \u0001(\u000b2\u0016.caffe.PythonParameter\u00123\n\u000freduction_param\u0018\u0088\u0001 \u0001(\u000b2\u0019.caffe.ReductionParameter\u0012(\n\nrelu_param\u0018{ \u0001(\u000b2\u0014.caffe.ReLUParameter\u0012/\n\rreshape_param\u0018\u0085\u0001 \u0001(\u000b2\u0017.caffe.ReshapeParameter\u0012+\n\u000bscale_param\u0018\u008e\u0001 \u0001(\u000b2\u0015.caffe.ScaleParameter\u0012.\n\rsigmoid_param\u0018| \u0001(\u000b2\u0017.caffe.SigmoidParameter\u0012.\n\rsoftmax_param\u0018} \u0001(\u000b2\u0017.caffe.SoftmaxParameter\u0012'\n\tspp_param\u0018\u0084\u0001 \u0001(\u000b2\u0013.caffe.SPPParameter\u0012*\n\u000bslice_param\u0018~ \u0001(\u000b2\u0015.caffe.SliceParameter\u0012(\n\ntanh_param\u0018\u007f \u0001(\u000b2\u0014.caffe.TanHParameter\u00123\n\u000fthreshold_param\u0018\u0080\u0001 \u0001(\u000b2\u0019.caffe.ThresholdParameter\u0012)\n\ntile_param\u0018\u008a\u0001 \u0001(\u000b2\u0014.caffe.TileParameter\u00126\n\u0011window_data_param\u0018\u0081\u0001 \u0001(\u000b2\u001a.caffe.WindowDataParameter\"\u00b6\u0001\n\u0017TransformationParameter\u0012\u0010\n\u0005scale\u0018\u0001 \u0001(\u0002:\u00011\u0012\u0015\n\u0006mirror\u0018\u0002 \u0001(\b:\u0005false\u0012\u0014\n\tcrop_size\u0018\u0003 \u0001(\r:\u00010\u0012\u0011\n\tmean_file\u0018\u0004 \u0001(\t\u0012\u0012\n\nmean_value\u0018\u0005 \u0003(\u0002\u0012\u001a\n\u000bforce_color\u0018\u0006 \u0001(\b:\u0005false\u0012\u0019\n\nforce_gray\u0018\u0007 \u0001(\b:\u0005false\"\u00c2\u0001\n\rLossParameter\u0012\u0014\n\fignore_label\u0018\u0001 \u0001(\u0005\u0012D\n\rnormalization\u0018\u0003 \u0001(\u000e2&.caffe.LossParameter.NormalizationMode:\u0005VALID\u0012\u0011\n\tnormalize\u0018\u0002 \u0001(\b\"B\n\u0011NormalizationMode\u0012\b\n\u0004FULL\u0010\u0000\u0012\t\n\u0005VALID\u0010\u0001\u0012\u000e\n\nBATCH_SIZE\u0010\u0002\u0012\b\n\u0004NONE\u0010\u0003\"L\n\u0011AccuracyParameter\u0012\u0010\n\u0005top_k\u0018\u0001 \u0001(\r:\u00011\u0012\u000f\n\u0004axis\u0018\u0002 \u0001(\u0005:\u00011\u0012\u0014\n\fignore_label\u0018\u0003 \u0001(\u0005\"M\n\u000fArgMaxParameter\u0012\u001a\n\u000bout_max_val\u0018\u0001 \u0001(\b:\u0005false\u0012\u0010\n\u0005top_k\u0018\u0002 \u0001(\r:\u00011\u0012\f\n\u0004axis\u0018\u0003 \u0001(\u0005\"9\n\u000fConcatParameter\u0012\u000f\n\u0004axis\u0018\u0002 \u0001(\u0005:\u00011\u0012\u0015\n\nconcat_dim\u0018\u0001 \u0001(\r:\u00011\"j\n\u0012BatchNormParameter\u0012\u0018\n\u0010use_global_stats\u0018\u0001 \u0001(\b\u0012&\n\u0017moving_average_fraction\u0018\u0002 \u0001(\u0002:\u00050.999\u0012\u0012\n\u0003eps\u0018\u0003 \u0001(\u0002:\u00051e-05\"]\n\rBiasParameter\u0012\u000f\n\u0004axis\u0018\u0001 \u0001(\u0005:\u00011\u0012\u0013\n\bnum_axes\u0018\u0002 \u0001(\u0005:\u00011\u0012&\n\u0006filler\u0018\u0003 \u0001(\u000b2\u0016.caffe.FillerParameter\"L\n\u0018ContrastiveLossParameter\u0012\u0011\n\u0006margin\u0018\u0001 \u0001(\u0002:\u00011\u0012\u001d\n\u000elegacy_version\u0018\u0002 \u0001(\b:\u0005false\"\u00fc\u0003\n\u0014ConvolutionParameter\u0012\u0012\n\nnum_output\u0018\u0001 \u0001(\r\u0012\u0017\n\tbias_term\u0018\u0002 \u0001(\b:\u0004true\u0012\u000b\n\u0003pad\u0018\u0003 \u0003(\r\u0012\u0013\n\u000bkernel_size\u0018\u0004 \u0003(\r\u0012\u000e\n\u0006stride\u0018\u0006 \u0003(\r\u0012\u0010\n\bdilation\u0018\u0012 \u0003(\r\u0012\u0010\n\u0005pad_h\u0018\t \u0001(\r:\u00010\u0012\u0010\n\u0005pad_w\u0018\n \u0001(\r:\u00010\u0012\u0010\n\bkernel_h\u0018\u000b \u0001(\r\u0012\u0010\n\bkernel_w\u0018\f \u0001(\r\u0012\u0010\n\bstride_h\u0018\r \u0001(\r\u0012\u0010\n\bstride_w\u0018\u000e \u0001(\r\u0012\u0010\n\u0005group\u0018\u0005 \u0001(\r:\u00011\u0012-\n\rweight_filler\u0018\u0007 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012+\n\u000bbias_filler\u0018\b \u0001(\u000b2\u0016.caffe.FillerParameter\u0012;\n\u0006engine\u0018\u000f \u0001(\u000e2\".caffe.ConvolutionParameter.Engine:\u0007DEFAULT\u0012\u000f\n\u0004axis\u0018\u0010 \u0001(\u0005:\u00011\u0012\u001e\n\u000fforce_nd_im2col\u0018\u0011 \u0001(\b:\u0005false\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"\u00a4\u0002\n\rDataParameter\u0012\u000e\n\u0006source\u0018\u0001 \u0001(\t\u0012\u0012\n\nbatch_size\u0018\u0004 \u0001(\r\u0012\u0014\n\trand_skip\u0018\u0007 \u0001(\r:\u00010\u00121\n\u0007backend\u0018\b \u0001(\u000e2\u0017.caffe.DataParameter.DB:\u0007LEVELDB\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0011\n\tmean_file\u0018\u0003 \u0001(\t\u0012\u0014\n\tcrop_size\u0018\u0005 \u0001(\r:\u00010\u0012\u0015\n\u0006mirror\u0018\u0006 \u0001(\b:\u0005false\u0012\"\n\u0013force_encoded_color\u0018\t \u0001(\b:\u0005false\u0012\u0013\n\bprefetch\u0018\n \u0001(\r:\u00014\"\u001b\n\u0002DB\u0012\u000b\n\u0007LEVELDB\u0010\u0000\u0012\b\n\u0004LMDB\u0010\u0001\".\n\u0010DropoutParameter\u0012\u001a\n\rdropout_ratio\u0018\u0001 \u0001(\u0002:\u00030.5\"\u00a0\u0001\n\u0012DummyDataParameter\u0012+\n\u000bdata_filler\u0018\u0001 \u0003(\u000b2\u0016.caffe.FillerParameter\u0012\u001f\n\u0005shape\u0018\u0006 \u0003(\u000b2\u0010.caffe.BlobShape\u0012\u000b\n\u0003num\u0018\u0002 \u0003(\r\u0012\u0010\n\bchannels\u0018\u0003 \u0003(\r\u0012\u000e\n\u0006height\u0018\u0004 \u0003(\r\u0012\r\n\u0005width\u0018\u0005 \u0003(\r\"\u00a5\u0001\n\u0010EltwiseParameter\u00129\n\toperation\u0018\u0001 \u0001(\u000e2!.caffe.EltwiseParameter.EltwiseOp:\u0003SUM\u0012\r\n\u0005coeff\u0018\u0002 \u0003(\u0002\u0012\u001e\n\u0010stable_prod_grad\u0018\u0003 \u0001(\b:\u0004true\"'\n\tEltwiseOp\u0012\b\n\u0004PROD\u0010\u0000\u0012\u0007\n\u0003SUM\u0010\u0001\u0012\u0007\n\u0003MAX\u0010\u0002\" \n\fELUParameter\u0012\u0010\n\u0005alpha\u0018\u0001 \u0001(\u0002:\u00011\"\u00ac\u0001\n\u000eEmbedParameter\u0012\u0012\n\nnum_output\u0018\u0001 \u0001(\r\u0012\u0011\n\tinput_dim\u0018\u0002 \u0001(\r\u0012\u0017\n\tbias_term\u0018\u0003 \u0001(\b:\u0004true\u0012-\n\rweight_filler\u0018\u0004 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012+\n\u000bbias_filler\u0018\u0005 \u0001(\u000b2\u0016.caffe.FillerParameter\"D\n\fExpParameter\u0012\u0010\n\u0004base\u0018\u0001 \u0001(\u0002:\u0002-1\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0010\n\u0005shift\u0018\u0003 \u0001(\u0002:\u00010\"9\n\u0010FlattenParameter\u0012\u000f\n\u0004axis\u0018\u0001 \u0001(\u0005:\u00011\u0012\u0014\n\bend_axis\u0018\u0002 \u0001(\u0005:\u0002-1\"O\n\u0011HDF5DataParameter\u0012\u000e\n\u0006source\u0018\u0001 \u0001(\t\u0012\u0012\n\nbatch_size\u0018\u0002 \u0001(\r\u0012\u0016\n\u0007shuffle\u0018\u0003 \u0001(\b:\u0005false\"(\n\u0013HDF5OutputParameter\u0012\u0011\n\tfile_name\u0018\u0001 \u0001(\t\"^\n\u0012HingeLossParameter\u00120\n\u0004norm\u0018\u0001 \u0001(\u000e2\u001e.caffe.HingeLossParameter.Norm:\u0002L1\"\u0016\n\u0004Norm\u0012\u0006\n\u0002L1\u0010\u0001\u0012\u0006\n\u0002L2\u0010\u0002\"\u0097\u0002\n\u0012ImageDataParameter\u0012\u000e\n\u0006source\u0018\u0001 \u0001(\t\u0012\u0015\n\nbatch_size\u0018\u0004 \u0001(\r:\u00011\u0012\u0014\n\trand_skip\u0018\u0007 \u0001(\r:\u00010\u0012\u0016\n\u0007shuffle\u0018\b \u0001(\b:\u0005false\u0012\u0015\n\nnew_height\u0018\t \u0001(\r:\u00010\u0012\u0014\n\tnew_width\u0018\n \u0001(\r:\u00010\u0012\u0016\n\bis_color\u0018\u000b \u0001(\b:\u0004true\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0011\n\tmean_file\u0018\u0003 \u0001(\t\u0012\u0014\n\tcrop_size\u0018\u0005 \u0001(\r:\u00010\u0012\u0015\n\u0006mirror\u0018\u0006 \u0001(\b:\u0005false\u0012\u0015\n\u000broot_folder\u0018\f \u0001(\t:\u0000\"'\n\u0015InfogainLossParameter\u0012\u000e\n\u0006source\u0018\u0001 \u0001(\t\"\u00b1\u0001\n\u0015InnerProductParameter\u0012\u0012\n\nnum_output\u0018\u0001 \u0001(\r\u0012\u0017\n\tbias_term\u0018\u0002 \u0001(\b:\u0004true\u0012-\n\rweight_filler\u0018\u0003 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012+\n\u000bbias_filler\u0018\u0004 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012\u000f\n\u0004axis\u0018\u0005 \u0001(\u0005:\u00011\"D\n\fLogParameter\u0012\u0010\n\u0004base\u0018\u0001 \u0001(\u0002:\u0002-1\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0010\n\u0005shift\u0018\u0003 \u0001(\u0002:\u00010\"\u00b8\u0002\n\fLRNParameter\u0012\u0015\n\nlocal_size\u0018\u0001 \u0001(\r:\u00015\u0012\u0010\n\u0005alpha\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0012\n\u0004beta\u0018\u0003 \u0001(\u0002:\u00040.75\u0012D\n\u000bnorm_region\u0018\u0004 \u0001(\u000e2\u001e.caffe.LRNParameter.NormRegion:\u000fACROSS_CHANNELS\u0012\f\n\u0001k\u0018\u0005 \u0001(\u0002:\u00011\u00123\n\u0006engine\u0018\u0006 \u0001(\u000e2\u001a.caffe.LRNParameter.Engine:\u0007DEFAULT\"5\n\nNormRegion\u0012\u0013\n\u000fACROSS_CHANNELS\u0010\u0000\u0012\u0012\n\u000eWITHIN_CHANNEL\u0010\u0001\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"Z\n\u0013MemoryDataParameter\u0012\u0012\n\nbatch_size\u0018\u0001 \u0001(\r\u0012\u0010\n\bchannels\u0018\u0002 \u0001(\r\u0012\u000e\n\u0006height\u0018\u0003 \u0001(\r\u0012\r\n\u0005width\u0018\u0004 \u0001(\r\"d\n\fMVNParameter\u0012 \n\u0012normalize_variance\u0018\u0001 \u0001(\b:\u0004true\u0012\u001e\n\u000facross_channels\u0018\u0002 \u0001(\b:\u0005false\u0012\u0012\n\u0003eps\u0018\u0003 \u0001(\u0002:\u00051e-09\"\u00a2\u0003\n\u0010PoolingParameter\u00125\n\u0004pool\u0018\u0001 \u0001(\u000e2\".caffe.PoolingParameter.PoolMethod:\u0003MAX\u0012\u000e\n\u0003pad\u0018\u0004 \u0001(\r:\u00010\u0012\u0010\n\u0005pad_h\u0018\t \u0001(\r:\u00010\u0012\u0010\n\u0005pad_w\u0018\n \u0001(\r:\u00010\u0012\u0013\n\u000bkernel_size\u0018\u0002 \u0001(\r\u0012\u0010\n\bkernel_h\u0018\u0005 \u0001(\r\u0012\u0010\n\bkernel_w\u0018\u0006 \u0001(\r\u0012\u0011\n\u0006stride\u0018\u0003 \u0001(\r:\u00011\u0012\u0010\n\bstride_h\u0018\u0007 \u0001(\r\u0012\u0010\n\bstride_w\u0018\b \u0001(\r\u00127\n\u0006engine\u0018\u000b \u0001(\u000e2\u001e.caffe.PoolingParameter.Engine:\u0007DEFAULT\u0012\u001d\n\u000eglobal_pooling\u0018\f \u0001(\b:\u0005false\".\n\nPoolMethod\u0012\u0007\n\u0003MAX\u0010\u0000\u0012\u0007\n\u0003AVE\u0010\u0001\u0012\u000e\n\nSTOCHASTIC\u0010\u0002\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"F\n\u000ePowerParameter\u0012\u0010\n\u0005power\u0018\u0001 \u0001(\u0002:\u00011\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0010\n\u0005shift\u0018\u0003 \u0001(\u0002:\u00010\"g\n\u000fPythonParameter\u0012\u000e\n\u0006module\u0018\u0001 \u0001(\t\u0012\r\n\u0005layer\u0018\u0002 \u0001(\t\u0012\u0013\n\tparam_str\u0018\u0003 \u0001(\t:\u0000\u0012 \n\u0011share_in_parallel\u0018\u0004 \u0001(\b:\u0005false\"\u00ad\u0001\n\u0012ReductionParameter\u0012=\n\toperation\u0018\u0001 \u0001(\u000e2%.caffe.ReductionParameter.ReductionOp:\u0003SUM\u0012\u000f\n\u0004axis\u0018\u0002 \u0001(\u0005:\u00010\u0012\u0010\n\u0005coeff\u0018\u0003 \u0001(\u0002:\u00011\"5\n\u000bReductionOp\u0012\u0007\n\u0003SUM\u0010\u0001\u0012\b\n\u0004ASUM\u0010\u0002\u0012\t\n\u0005SUMSQ\u0010\u0003\u0012\b\n\u0004MEAN\u0010\u0004\"\u008d\u0001\n\rReLUParameter\u0012\u0019\n\u000enegative_slope\u0018\u0001 \u0001(\u0002:\u00010\u00124\n\u0006engine\u0018\u0002 \u0001(\u000e2\u001b.caffe.ReLUParameter.Engine:\u0007DEFAULT\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"Z\n\u0010ReshapeParameter\u0012\u001f\n\u0005shape\u0018\u0001 \u0001(\u000b2\u0010.caffe.BlobShape\u0012\u000f\n\u0004axis\u0018\u0002 \u0001(\u0005:\u00010\u0012\u0014\n\bnum_axes\u0018\u0003 \u0001(\u0005:\u0002-1\"\u00a5\u0001\n\u000eScaleParameter\u0012\u000f\n\u0004axis\u0018\u0001 \u0001(\u0005:\u00011\u0012\u0013\n\bnum_axes\u0018\u0002 \u0001(\u0005:\u00011\u0012&\n\u0006filler\u0018\u0003 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012\u0018\n\tbias_term\u0018\u0004 \u0001(\b:\u0005false\u0012+\n\u000bbias_filler\u0018\u0005 \u0001(\u000b2\u0016.caffe.FillerParameter\"x\n\u0010SigmoidParameter\u00127\n\u0006engine\u0018\u0001 \u0001(\u000e2\u001e.caffe.SigmoidParameter.Engine:\u0007DEFAULT\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"L\n\u000eSliceParameter\u0012\u000f\n\u0004axis\u0018\u0003 \u0001(\u0005:\u00011\u0012\u0013\n\u000bslice_point\u0018\u0002 \u0003(\r\u0012\u0014\n\tslice_dim\u0018\u0001 \u0001(\r:\u00011\"\u0089\u0001\n\u0010SoftmaxParameter\u00127\n\u0006engine\u0018\u0001 \u0001(\u000e2\u001e.caffe.SoftmaxParameter.Engine:\u0007DEFAULT\u0012\u000f\n\u0004axis\u0018\u0002 \u0001(\u0005:\u00011\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"r\n\rTanHParameter\u00124\n\u0006engine\u0018\u0001 \u0001(\u000e2\u001b.caffe.TanHParameter.Engine:\u0007DEFAULT\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"/\n\rTileParameter\u0012\u000f\n\u0004axis\u0018\u0001 \u0001(\u0005:\u00011\u0012\r\n\u0005tiles\u0018\u0002 \u0001(\u0005\"*\n\u0012ThresholdParameter\u0012\u0014\n\tthreshold\u0018\u0001 \u0001(\u0002:\u00010\"\u00c1\u0002\n\u0013WindowDataParameter\u0012\u000e\n\u0006source\u0018\u0001 \u0001(\t\u0012\u0010\n\u0005scale\u0018\u0002 \u0001(\u0002:\u00011\u0012\u0011\n\tmean_file\u0018\u0003 \u0001(\t\u0012\u0012\n\nbatch_size\u0018\u0004 \u0001(\r\u0012\u0014\n\tcrop_size\u0018\u0005 \u0001(\r:\u00010\u0012\u0015\n\u0006mirror\u0018\u0006 \u0001(\b:\u0005false\u0012\u0019\n\ffg_threshold\u0018\u0007 \u0001(\u0002:\u00030.5\u0012\u0019\n\fbg_threshold\u0018\b \u0001(\u0002:\u00030.5\u0012\u0019\n\u000bfg_fraction\u0018\t \u0001(\u0002:\u00040.25\u0012\u0016\n\u000bcontext_pad\u0018\n \u0001(\r:\u00010\u0012\u0017\n\tcrop_mode\u0018\u000b \u0001(\t:\u0004warp\u0012\u001b\n\fcache_images\u0018\f \u0001(\b:\u0005false\u0012\u0015\n\u000broot_folder\u0018\r \u0001(\t:\u0000\"\u00eb\u0001\n\fSPPParameter\u0012\u0016\n\u000epyramid_height\u0018\u0001 \u0001(\r\u00121\n\u0004pool\u0018\u0002 \u0001(\u000e2\u001e.caffe.SPPParameter.PoolMethod:\u0003MAX\u00123\n\u0006engine\u0018\u0006 \u0001(\u000e2\u001a.caffe.SPPParameter.Engine:\u0007DEFAULT\".\n\nPoolMethod\u0012\u0007\n\u0003MAX\u0010\u0000\u0012\u0007\n\u0003AVE\u0010\u0001\u0012\u000e\n\nSTOCHASTIC\u0010\u0002\"+\n\u0006Engine\u0012\u000b\n\u0007DEFAULT\u0010\u0000\u0012\t\n\u0005CAFFE\u0010\u0001\u0012\t\n\u0005CUDNN\u0010\u0002\"\u00e0\u0013\n\u0010V1LayerParameter\u0012\u000e\n\u0006bottom\u0018\u0002 \u0003(\t\u0012\u000b\n\u0003top\u0018\u0003 \u0003(\t\u0012\f\n\u0004name\u0018\u0004 \u0001(\t\u0012$\n\u0007include\u0018  \u0003(\u000b2\u0013.caffe.NetStateRule\u0012$\n\u0007exclude\u0018! \u0003(\u000b2\u0013.caffe.NetStateRule\u0012/\n\u0004type\u0018\u0005 \u0001(\u000e2!.caffe.V1LayerParameter.LayerType\u0012\u001f\n\u0005blobs\u0018\u0006 \u0003(\u000b2\u0010.caffe.BlobProto\u0012\u000e\n\u0005param\u0018\u00e9\u0007 \u0003(\t\u0012>\n\u000fblob_share_mode\u0018\u00ea\u0007 \u0003(\u000e2$.caffe.V1LayerParameter.DimCheckMode\u0012\u0010\n\bblobs_lr\u0018\u0007 \u0003(\u0002\u0012\u0014\n\fweight_decay\u0018\b \u0003(\u0002\u0012\u0013\n\u000bloss_weight\u0018# \u0003(\u0002\u00120\n\u000eaccuracy_param\u0018\u001b \u0001(\u000b2\u0018.caffe.AccuracyParameter\u0012,\n\fargmax_param\u0018\u0017 \u0001(\u000b2\u0016.caffe.ArgMaxParameter\u0012,\n\fconcat_param\u0018\t \u0001(\u000b2\u0016.caffe.ConcatParameter\u0012?\n\u0016contrastive_loss_param\u0018( \u0001(\u000b2\u001f.caffe.ContrastiveLossParameter\u00126\n\u0011convolution_param\u0018\n \u0001(\u000b2\u001b.caffe.ConvolutionParameter\u0012(\n\ndata_param\u0018\u000b \u0001(\u000b2\u0014.caffe.DataParameter\u0012.\n\rdropout_param\u0018\f \u0001(\u000b2\u0017.caffe.DropoutParameter\u00123\n\u0010dummy_data_param\u0018\u001a \u0001(\u000b2\u0019.caffe.DummyDataParameter\u0012.\n\reltwise_param\u0018\u0018 \u0001(\u000b2\u0017.caffe.EltwiseParameter\u0012&\n\texp_param\u0018) \u0001(\u000b2\u0013.caffe.ExpParameter\u00121\n\u000fhdf5_data_param\u0018\r \u0001(\u000b2\u0018.caffe.HDF5DataParameter\u00125\n\u0011hdf5_output_param\u0018\u000e \u0001(\u000b2\u001a.caffe.HDF5OutputParameter\u00123\n\u0010hinge_loss_param\u0018\u001d \u0001(\u000b2\u0019.caffe.HingeLossParameter\u00123\n\u0010image_data_param\u0018\u000f \u0001(\u000b2\u0019.caffe.ImageDataParameter\u00129\n\u0013infogain_loss_param\u0018\u0010 \u0001(\u000b2\u001c.caffe.InfogainLossParameter\u00129\n\u0013inner_product_param\u0018\u0011 \u0001(\u000b2\u001c.caffe.InnerProductParameter\u0012&\n\tlrn_param\u0018\u0012 \u0001(\u000b2\u0013.caffe.LRNParameter\u00125\n\u0011memory_data_param\u0018\u0016 \u0001(\u000b2\u001a.caffe.MemoryDataParameter\u0012&\n\tmvn_param\u0018\" \u0001(\u000b2\u0013.caffe.MVNParameter\u0012.\n\rpooling_param\u0018\u0013 \u0001(\u000b2\u0017.caffe.PoolingParameter\u0012*\n\u000bpower_param\u0018\u0015 \u0001(\u000b2\u0015.caffe.PowerParameter\u0012(\n\nrelu_param\u0018\u001e \u0001(\u000b2\u0014.caffe.ReLUParameter\u0012.\n\rsigmoid_param\u0018& \u0001(\u000b2\u0017.caffe.SigmoidParameter\u0012.\n\rsoftmax_param\u0018' \u0001(\u000b2\u0017.caffe.SoftmaxParameter\u0012*\n\u000bslice_param\u0018\u001f \u0001(\u000b2\u0015.caffe.SliceParameter\u0012(\n\ntanh_param\u0018% \u0001(\u000b2\u0014.caffe.TanHParameter\u00122\n\u000fthreshold_param\u0018\u0019 \u0001(\u000b2\u0019.caffe.ThresholdParameter\u00125\n\u0011window_data_param\u0018\u0014 \u0001(\u000b2\u001a.caffe.WindowDataParameter\u00127\n\u000ftransform_param\u0018$ \u0001(\u000b2\u001e.caffe.TransformationParameter\u0012(\n\nloss_param\u0018* \u0001(\u000b2\u0014.caffe.LossParameter\u0012&\n\u0005layer\u0018\u0001 \u0001(\u000b2\u0017.caffe.V0LayerParameter\"\u00d8\u0004\n\tLayerType\u0012\b\n\u0004NONE\u0010\u0000\u0012\n\n\u0006ABSVAL\u0010#\u0012\f\n\bACCURACY\u0010\u0001\u0012\n\n\u0006ARGMAX\u0010\u001e\u0012\b\n\u0004BNLL\u0010\u0002\u0012\n\n\u0006CONCAT\u0010\u0003\u0012\u0014\n\u0010CONTRASTIVE_LOSS\u0010%\u0012\u000f\n\u000bCONVOLUTION\u0010\u0004\u0012\b\n\u0004DATA\u0010\u0005\u0012\u0011\n\rDECONVOLUTION\u0010'\u0012\u000b\n\u0007DROPOUT\u0010\u0006\u0012\u000e\n\nDUMMY_DATA\u0010 \u0012\u0012\n\u000eEUCLIDEAN_LOSS\u0010\u0007\u0012\u000b\n\u0007ELTWISE\u0010\u0019\u0012\u0007\n\u0003EXP\u0010&\u0012\u000b\n\u0007FLATTEN\u0010\b\u0012\r\n\tHDF5_DATA\u0010\t\u0012\u000f\n\u000bHDF5_OUTPUT\u0010\n\u0012\u000e\n\nHINGE_LOSS\u0010\u001c\u0012\n\n\u0006IM2COL\u0010\u000b\u0012\u000e\n\nIMAGE_DATA\u0010\f\u0012\u0011\n\rINFOGAIN_LOSS\u0010\r\u0012\u0011\n\rINNER_PRODUCT\u0010\u000e\u0012\u0007\n\u0003LRN\u0010\u000f\u0012\u000f\n\u000bMEMORY_DATA\u0010\u001d\u0012\u001d\n\u0019MULTINOMIAL_LOGISTIC_LOSS\u0010\u0010\u0012\u0007\n\u0003MVN\u0010\"\u0012\u000b\n\u0007POOLING\u0010\u0011\u0012\t\n\u0005POWER\u0010\u001a\u0012\b\n\u0004RELU\u0010\u0012\u0012\u000b\n\u0007SIGMOID\u0010\u0013\u0012\u001e\n\u001aSIGMOID_CROSS_ENTROPY_LOSS\u0010\u001b\u0012\u000b\n\u0007SILENCE\u0010$\u0012\u000b\n\u0007SOFTMAX\u0010\u0014\u0012\u0010\n\fSOFTMAX_LOSS\u0010\u0015\u0012\t\n\u0005SPLIT\u0010\u0016\u0012\t\n\u0005SLICE\u0010!\u0012\b\n\u0004TANH\u0010\u0017\u0012\u000f\n\u000bWINDOW_DATA\u0010\u0018\u0012\r\n\tTHRESHOLD\u0010\u001f\"*\n\fDimCheckMode\u0012\n\n\u0006STRICT\u0010\u0000\u0012\u000e\n\nPERMISSIVE\u0010\u0001\"\u00fd\u0007\n\u0010V0LayerParameter\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\f\n\u0004type\u0018\u0002 \u0001(\t\u0012\u0012\n\nnum_output\u0018\u0003 \u0001(\r\u0012\u0016\n\bbiasterm\u0018\u0004 \u0001(\b:\u0004true\u0012-\n\rweight_filler\u0018\u0005 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012+\n\u000bbias_filler\u0018\u0006 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012\u000e\n\u0003pad\u0018\u0007 \u0001(\r:\u00010\u0012\u0012\n\nkernelsize\u0018\b \u0001(\r\u0012\u0010\n\u0005group\u0018\t \u0001(\r:\u00011\u0012\u0011\n\u0006stride\u0018\n \u0001(\r:\u00011\u00125\n\u0004pool\u0018\u000b \u0001(\u000e2\".caffe.V0LayerParameter.PoolMethod:\u0003MAX\u0012\u001a\n\rdropout_ratio\u0018\f \u0001(\u0002:\u00030.5\u0012\u0015\n\nlocal_size\u0018\r \u0001(\r:\u00015\u0012\u0010\n\u0005alpha\u0018\u000e \u0001(\u0002:\u00011\u0012\u0012\n\u0004beta\u0018\u000f \u0001(\u0002:\u00040.75\u0012\f\n\u0001k\u0018\u0016 \u0001(\u0002:\u00011\u0012\u000e\n\u0006source\u0018\u0010 \u0001(\t\u0012\u0010\n\u0005scale\u0018\u0011 \u0001(\u0002:\u00011\u0012\u0010\n\bmeanfile\u0018\u0012 \u0001(\t\u0012\u0011\n\tbatchsize\u0018\u0013 \u0001(\r\u0012\u0013\n\bcropsize\u0018\u0014 \u0001(\r:\u00010\u0012\u0015\n\u0006mirror\u0018\u0015 \u0001(\b:\u0005false\u0012\u001f\n\u0005blobs\u00182 \u0003(\u000b2\u0010.caffe.BlobProto\u0012\u0010\n\bblobs_lr\u00183 \u0003(\u0002\u0012\u0014\n\fweight_decay\u00184 \u0003(\u0002\u0012\u0014\n\trand_skip\u00185 \u0001(\r:\u00010\u0012\u001d\n\u0010det_fg_threshold\u00186 \u0001(\u0002:\u00030.5\u0012\u001d\n\u0010det_bg_threshold\u00187 \u0001(\u0002:\u00030.5\u0012\u001d\n\u000fdet_fg_fraction\u00188 \u0001(\u0002:\u00040.25\u0012\u001a\n\u000fdet_context_pad\u0018: \u0001(\r:\u00010\u0012\u001b\n\rdet_crop_mode\u0018; \u0001(\t:\u0004warp\u0012\u0012\n\u0007new_num\u0018< \u0001(\u0005:\u00010\u0012\u0017\n\fnew_channels\u0018= \u0001(\u0005:\u00010\u0012\u0015\n\nnew_height\u0018> \u0001(\u0005:\u00010\u0012\u0014\n\tnew_width\u0018? \u0001(\u0005:\u00010\u0012\u001d\n\u000eshuffle_images\u0018@ \u0001(\b:\u0005false\u0012\u0015\n\nconcat_dim\u0018A \u0001(\r:\u00011\u00126\n\u0011hdf5_output_param\u0018\u00e9\u0007 \u0001(\u000b2\u001a.caffe.HDF5OutputParameter\".\n\nPoolMethod\u0012\u0007\n\u0003MAX\u0010\u0000\u0012\u0007\n\u0003AVE\u0010\u0001\u0012\u000e\n\nSTOCHASTIC\u0010\u0002\"W\n\u000ePReLUParameter\u0012&\n\u0006filler\u0018\u0001 \u0001(\u000b2\u0016.caffe.FillerParameter\u0012\u001d\n\u000echannel_shared\u0018\u0002 \u0001(\b:\u0005false*\u001c\n\u0005Phase\u0012\t\n\u0005TRAIN\u0010\u0000\u0012\b\n\u0004TEST\u0010\u0001", "name", "package", "syntax", "serialized_pb", "TRAIN", "TEST", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "FAN_IN", "FAN_OUT", "AVERAGE", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "HDF5", "BINARYPROTO", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "CPU", "GPU", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "SGD", "NESTEROV", "ADAGRAD", "RMSPROP", "ADADELTA", "ADAM", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "STRICT", "PERMISSIVE", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "FULL", "VALID", "BATCH_SIZE", "NONE", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "LEVELDB", "LMDB", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "PROD", "SUM", "MAX", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "L1", "L2", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "ACROSS_CHANNELS", "WITHIN_CHANNEL", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "MAX", "AVE", "STOCHASTIC", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "SUM", "ASUM", "SUMSQ", "MEAN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "MAX", "AVE", "STOCHASTIC", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "DEFAULT", "CAFFE", "CUDNN", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "SOFTMAX_LOSS", "SPLIT", "SLICE", "TANH", "WINDOW_DATA", "THRESHOLD", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "STRICT", "PERMISSIVE", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "MAX", "AVE", "STOCHASTIC", "name", "full_name", "filename", "file", "values", "containing_type", "options", "serialized_start", "serialized_end", "SOFTMAX", "SOFTMAX_LOSS", "SPLIT", "SLICE", "TANH", "WINDOW_DATA", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "SOFTMAX", "name", "index", "number", "options", "type", "SOFTMAX_LOSS", "name", "index", "number", "options", "type", "SPLIT", "name", "index", "number", "options", "type", "SLICE", "name", "index", "number", "options", "type", "TANH", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "SOFTMAX", "name", "index", "number", "options", "type", "SOFTMAX_LOSS", "name", "index", "number", "options", "type", "SPLIT", "name", "index", "number", "options", "type", "SLICE", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "SOFTMAX", "name", "index", "number", "options", "type", "SOFTMAX_LOSS", "name", "index", "number", "options", "type", "SPLIT", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "SOFTMAX", "name", "index", "number", "options", "type", "SOFTMAX_LOSS", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "SOFTMAX", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "SILENCE", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "SIGMOID_CROSS_ENTROPY_LOSS", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "SIGMOID", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "RELU", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "POWER", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "POOLING", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "MVN", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "MULTINOMIAL_LOGISTIC_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "MEMORY_DATA", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "LRN", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "INNER_PRODUCT", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "INFOGAIN_LOSS", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "IMAGE_DATA", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "IM2COL", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "HINGE_LOSS", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "HDF5_OUTPUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "HDF5_DATA", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "FLATTEN", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "EXP", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "ELTWISE", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "EUCLIDEAN_LOSS", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "DUMMY_DATA", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "DROPOUT", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "DECONVOLUTION", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "DATA", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "CONVOLUTION", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "CONTRASTIVE_LOSS", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "CONCAT", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "BNLL", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "ARGMAX", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "ACCURACY", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "ABSVAL", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "NONE", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type", "name", "index", "number", "options", "type"]}