{"imports": ["os", "numpy", "backend", "keras_export", "load_batch", "get_file"], "function_calls": ["get_file", "join", "load_batch", "join", "load_batch", "reshape", "reshape", "keras_export", "ValueError", "image_data_format", "transpose", "transpose", "len", "len"], "strings": ["CIFAR100 small images classification dataset.", "Loads the CIFAR100 dataset.\n\n    This is a dataset of 50,000 32x32 color training images and\n    10,000 test images, labeled over 100 fine-grained classes that are\n    grouped into 20 coarse-grained classes. See more info at the\n    [CIFAR homepage](https://www.cs.toronto.edu/~kriz/cifar.html).\n\n    Args:\n        label_mode: one of `\"fine\"`, `\"coarse\"`.\n            If it is `\"fine\"`, the category labels\n            are the fine-grained labels, and if it is `\"coarse\"`,\n            the output labels are the coarse-grained superclasses.\n\n    Returns:\n        Tuple of NumPy arrays: `(x_train, y_train), (x_test, y_test)`.\n\n    **`x_train`**: `uint8` NumPy array of grayscale image data with shapes\n      `(50000, 32, 32, 3)`, containing the training data. Pixel values range\n      from 0 to 255.\n\n    **`y_train`**: `uint8` NumPy array of labels (integers in range 0-99)\n      with shape `(50000, 1)` for the training data.\n\n    **`x_test`**: `uint8` NumPy array of grayscale image data with shapes\n      `(10000, 32, 32, 3)`, containing the test data. Pixel values range\n      from 0 to 255.\n\n    **`y_test`**: `uint8` NumPy array of labels (integers in range 0-99)\n      with shape `(10000, 1)` for the test data.\n\n    Example:\n\n    ```python\n    (x_train, y_train), (x_test, y_test) = keras.datasets.cifar100.load_data()\n    assert x_train.shape == (50000, 32, 32, 3)\n    assert x_test.shape == (10000, 32, 32, 3)\n    assert y_train.shape == (50000, 1)\n    assert y_test.shape == (10000, 1)\n    ```\n    ", "https://www.cs.toronto.edu/~kriz/cifar-100-python.tar.gz", "fine", "85cd44d02ba6437773c5bbd22e183051d648de2e7d6b014e1ef29b855ba677a7", "train", "test", "channels_last", "keras.datasets.cifar100.load_data", "fine", "coarse", "_labels", "_labels", "`label_mode` must be one of `\"fine\"`, `\"coarse\"`. Received: label_mode=", ".", "fname", "origin", "untar", "file_hash", "label_key", "label_key"]}