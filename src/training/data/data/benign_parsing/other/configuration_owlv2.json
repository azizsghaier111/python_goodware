{"imports": ["os", "TYPE_CHECKING", "Dict", "Union", "PretrainedConfig", "logging", "OWLV2_PRETRAINED_CONFIG_ARCHIVE_MAP"], "function_calls": ["get_logger", "_set_token_in_kwargs", "_set_token_in_kwargs", "_set_token_in_kwargs"], "strings": [" OWLv2 model configuration", "\n    This is the configuration class to store the configuration of an [`Owlv2TextModel`]. It is used to instantiate an\n    Owlv2 text encoder according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the Owlv2\n    [google/owlv2-base-patch16](https://huggingface.co/google/owlv2-base-patch16) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n\n    Args:\n        vocab_size (`int`, *optional*, defaults to 49408):\n            Vocabulary size of the OWLv2 text model. Defines the number of different tokens that can be represented\n            by the `inputs_ids` passed when calling [`Owlv2TextModel`].\n        hidden_size (`int`, *optional*, defaults to 512):\n            Dimensionality of the encoder layers and the pooler layer.\n        intermediate_size (`int`, *optional*, defaults to 2048):\n            Dimensionality of the \"intermediate\" (i.e., feed-forward) layer in the Transformer encoder.\n        num_hidden_layers (`int`, *optional*, defaults to 12):\n            Number of hidden layers in the Transformer encoder.\n        num_attention_heads (`int`, *optional*, defaults to 8):\n            Number of attention heads for each attention layer in the Transformer encoder.\n        max_position_embeddings (`int`, *optional*, defaults to 16):\n            The maximum sequence length that this model might ever be used with. Typically set this to something large\n            just in case (e.g., 512 or 1024 or 2048).\n        hidden_act (`str` or `function`, *optional*, defaults to `\"quick_gelu\"`):\n            The non-linear activation function (function or string) in the encoder and pooler. If string, `\"gelu\"`,\n            `\"relu\"`, `\"selu\"` and `\"gelu_new\"` ``\"quick_gelu\"` are supported.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-05):\n            The epsilon used by the layer normalization layers.\n        attention_dropout (`float`, *optional*, defaults to 0.0):\n            The dropout ratio for the attention probabilities.\n        initializer_range (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        initializer_factor (`float`, *optional*, defaults to 1.0):\n            A factor for initializing all weight matrices (should be kept to 1, used internally for initialization\n            testing).\n        pad_token_id (`int`, *optional*, defaults to 0):\n            The id of the padding token in the input sequences.\n        bos_token_id (`int`, *optional*, defaults to 49406):\n            The id of the beginning-of-sequence token in the input sequences.\n        eos_token_id (`int`, *optional*, defaults to 49407):\n            The id of the end-of-sequence token in the input sequences.\n\n    Example:\n\n    ```python\n    >>> from transformers import Owlv2TextConfig, Owlv2TextModel\n\n    >>> # Initializing a Owlv2TextModel with google/owlv2-base-patch16 style configuration\n    >>> configuration = Owlv2TextConfig()\n\n    >>> # Initializing a Owlv2TextConfig from the google/owlv2-base-patch16 style configuration\n    >>> model = Owlv2TextModel(configuration)\n\n    >>> # Accessing the model configuration\n    >>> configuration = model.config\n    ```", "owlv2_text_model", "\n    This is the configuration class to store the configuration of an [`Owlv2VisionModel`]. It is used to instantiate\n    an OWLv2 image encoder according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the OWLv2\n    [google/owlv2-base-patch16](https://huggingface.co/google/owlv2-base-patch16) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        hidden_size (`int`, *optional*, defaults to 768):\n            Dimensionality of the encoder layers and the pooler layer.\n        intermediate_size (`int`, *optional*, defaults to 3072):\n            Dimensionality of the \"intermediate\" (i.e., feed-forward) layer in the Transformer encoder.\n        num_hidden_layers (`int`, *optional*, defaults to 12):\n            Number of hidden layers in the Transformer encoder.\n        num_attention_heads (`int`, *optional*, defaults to 12):\n            Number of attention heads for each attention layer in the Transformer encoder.\n        num_channels (`int`, *optional*, defaults to 3):\n            Number of channels in the input images.\n        image_size (`int`, *optional*, defaults to 768):\n            The size (resolution) of each image.\n        patch_size (`int`, *optional*, defaults to 16):\n            The size (resolution) of each patch.\n        hidden_act (`str` or `function`, *optional*, defaults to `\"quick_gelu\"`):\n            The non-linear activation function (function or string) in the encoder and pooler. If string, `\"gelu\"`,\n            `\"relu\"`, `\"selu\"` and `\"gelu_new\"` ``\"quick_gelu\"` are supported.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-05):\n            The epsilon used by the layer normalization layers.\n        attention_dropout (`float`, *optional*, defaults to 0.0):\n            The dropout ratio for the attention probabilities.\n        initializer_range (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        initializer_factor (`float`, *optional*, defaults to 1.0):\n            A factor for initializing all weight matrices (should be kept to 1, used internally for initialization\n            testing).\n\n    Example:\n\n    ```python\n    >>> from transformers import Owlv2VisionConfig, Owlv2VisionModel\n\n    >>> # Initializing a Owlv2VisionModel with google/owlv2-base-patch16 style configuration\n    >>> configuration = Owlv2VisionConfig()\n\n    >>> # Initializing a Owlv2VisionModel model from the google/owlv2-base-patch16 style configuration\n    >>> model = Owlv2VisionModel(configuration)\n\n    >>> # Accessing the model configuration\n    >>> configuration = model.config\n    ```", "owlv2_vision_model", "\n    [`Owlv2Config`] is the configuration class to store the configuration of an [`Owlv2Model`]. It is used to\n    instantiate an OWLv2 model according to the specified arguments, defining the text model and vision model\n    configs. Instantiating a configuration with the defaults will yield a similar configuration to that of the OWLv2\n    [google/owlv2-base-patch16](https://huggingface.co/google/owlv2-base-patch16) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        text_config (`dict`, *optional*):\n            Dictionary of configuration options used to initialize [`Owlv2TextConfig`].\n        vision_config (`dict`, *optional*):\n            Dictionary of configuration options used to initialize [`Owlv2VisionConfig`].\n        projection_dim (`int`, *optional*, defaults to 512):\n            Dimensionality of text and vision projection layers.\n        logit_scale_init_value (`float`, *optional*, defaults to 2.6592):\n            The inital value of the *logit_scale* parameter. Default is used as per the original OWLv2\n            implementation.\n        return_dict (`bool`, *optional*, defaults to `True`):\n            Whether or not the model should return a dictionary. If `False`, returns a tuple.\n        kwargs (*optional*):\n            Dictionary of keyword arguments.\n    ", "owlv2", "\n        Instantiate a [`Owlv2Config`] (or a derived class) from owlv2 text model configuration and owlv2 vision\n        model configuration.\n\n        Returns:\n            [`Owlv2Config`]: An instance of a configuration object\n        ", "text_config", "vision_config", "quick_gelu", "quick_gelu"]}