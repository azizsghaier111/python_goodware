{"imports": ["PretrainedConfig", "is_detectron2_available", "logging", "LAYOUTLMV2_PRETRAINED_CONFIG_ARCHIVE_MAP", "detectron2"], "function_calls": ["get_logger", "is_detectron2_available", "classmethod", "get_cfg", "items", "split", "setattr", "getattr"], "strings": [" LayoutLMv2 model configuration", "\n    This is the configuration class to store the configuration of a [`LayoutLMv2Model`]. It is used to instantiate an\n    LayoutLMv2 model according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the LayoutLMv2\n    [microsoft/layoutlmv2-base-uncased](https://huggingface.co/microsoft/layoutlmv2-base-uncased) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        vocab_size (`int`, *optional*, defaults to 30522):\n            Vocabulary size of the LayoutLMv2 model. Defines the number of different tokens that can be represented by\n            the `inputs_ids` passed when calling [`LayoutLMv2Model`] or [`TFLayoutLMv2Model`].\n        hidden_size (`int`, *optional*, defaults to 768):\n            Dimension of the encoder layers and the pooler layer.\n        num_hidden_layers (`int`, *optional*, defaults to 12):\n            Number of hidden layers in the Transformer encoder.\n        num_attention_heads (`int`, *optional*, defaults to 12):\n            Number of attention heads for each attention layer in the Transformer encoder.\n        intermediate_size (`int`, *optional*, defaults to 3072):\n            Dimension of the \"intermediate\" (i.e., feed-forward) layer in the Transformer encoder.\n        hidden_act (`str` or `function`, *optional*, defaults to `\"gelu\"`):\n            The non-linear activation function (function or string) in the encoder and pooler. If string, `\"gelu\"`,\n            `\"relu\"`, `\"selu\"` and `\"gelu_new\"` are supported.\n        hidden_dropout_prob (`float`, *optional*, defaults to 0.1):\n            The dropout probability for all fully connected layers in the embeddings, encoder, and pooler.\n        attention_probs_dropout_prob (`float`, *optional*, defaults to 0.1):\n            The dropout ratio for the attention probabilities.\n        max_position_embeddings (`int`, *optional*, defaults to 512):\n            The maximum sequence length that this model might ever be used with. Typically set this to something large\n            just in case (e.g., 512 or 1024 or 2048).\n        type_vocab_size (`int`, *optional*, defaults to 2):\n            The vocabulary size of the `token_type_ids` passed when calling [`LayoutLMv2Model`] or\n            [`TFLayoutLMv2Model`].\n        initializer_range (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-12):\n            The epsilon used by the layer normalization layers.\n        max_2d_position_embeddings (`int`, *optional*, defaults to 1024):\n            The maximum value that the 2D position embedding might ever be used with. Typically set this to something\n            large just in case (e.g., 1024).\n        max_rel_pos (`int`, *optional*, defaults to 128):\n            The maximum number of relative positions to be used in the self-attention mechanism.\n        rel_pos_bins (`int`, *optional*, defaults to 32):\n            The number of relative position bins to be used in the self-attention mechanism.\n        fast_qkv (`bool`, *optional*, defaults to `True`):\n            Whether or not to use a single matrix for the queries, keys, values in the self-attention layers.\n        max_rel_2d_pos (`int`, *optional*, defaults to 256):\n            The maximum number of relative 2D positions in the self-attention mechanism.\n        rel_2d_pos_bins (`int`, *optional*, defaults to 64):\n            The number of 2D relative position bins in the self-attention mechanism.\n        image_feature_pool_shape (`List[int]`, *optional*, defaults to [7, 7, 256]):\n            The shape of the average-pooled feature map.\n        coordinate_size (`int`, *optional*, defaults to 128):\n            Dimension of the coordinate embeddings.\n        shape_size (`int`, *optional*, defaults to 128):\n            Dimension of the width and height embeddings.\n        has_relative_attention_bias (`bool`, *optional*, defaults to `True`):\n            Whether or not to use a relative attention bias in the self-attention mechanism.\n        has_spatial_attention_bias (`bool`, *optional*, defaults to `True`):\n            Whether or not to use a spatial attention bias in the self-attention mechanism.\n        has_visual_segment_embedding (`bool`, *optional*, defaults to `False`):\n            Whether or not to add visual segment embeddings.\n        detectron2_config_args (`dict`, *optional*):\n            Dictionary containing the configuration arguments of the Detectron2 visual backbone. Refer to [this\n            file](https://github.com/microsoft/unilm/blob/master/layoutlmft/layoutlmft/models/layoutlmv2/detectron2_config.py)\n            for details regarding default values.\n\n    Example:\n\n    ```python\n    >>> from transformers import LayoutLMv2Config, LayoutLMv2Model\n\n    >>> # Initializing a LayoutLMv2 microsoft/layoutlmv2-base-uncased style configuration\n    >>> configuration = LayoutLMv2Config()\n\n    >>> # Initializing a model (with random weights) from the microsoft/layoutlmv2-base-uncased style configuration\n    >>> model = LayoutLMv2Model(configuration)\n\n    >>> # Accessing the model configuration\n    >>> configuration = model.config\n    ```", "layoutlmv2", "gelu", "."]}