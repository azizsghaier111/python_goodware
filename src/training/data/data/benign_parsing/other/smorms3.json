{"imports": ["numpy", "chainer", "cuda", "optimizer", "types", "typing_extensions"], "function_calls": ["Hyperparameter", "HyperparameterProxy", "HyperparameterProxy", "__init__", "_kernel", "__init__", "SMORMS3Rule", "elementwise", "super", "minimum", "sqrt", "super"], "strings": ["Update rule for Simon Funk's SMORMS3.\n\n    See :class:`~chainer.optimizers.SMORMS3` for the default values of the\n    hyperparameters.\n\n    Args:\n        parent_hyperparam (~chainer.optimizer.Hyperparameter): Hyperparameter\n            that provides the default values.\n        lr (float): Learning rate.\n        eps (float): Small value for the numerical stability.\n\n    ", "Simon Funk's SMORMS3.\n\n    See http://sifter.org/~simon/journal/20150420.html.\n\n    Args:\n        lr (float): Learning rate.\n        eps (float): Small value for the numerical stability.\n\n    ", "Protocol class for hyperparameter of Simon Funk's SMORMS3.\n\n        This is only for PEP 544 compliant static type checkers.\n        ", "lr", "eps", "mem", "g", "g2", "mem", "g", "g2", "T grad, T lr, T eps", "T param, T mem, T g, T g2", "T r, x;\n                   r = 1 / (mem + 1);\n                   g = (1 - r) * g + r * grad;\n                   g2 = (1 - r) * g2 + r * grad * grad;\n                   x = g * g / (g2 + eps);\n                   param -= grad * min(lr, x) / (sqrt(g2) + eps);\n                   mem = 1 + mem * (1 - x)\n                   ", "smorms3", "mem", "g", "g2"]}