{"imports": ["os", "Union", "PretrainedConfig", "logging", "KOSMOS2_PRETRAINED_CONFIG_ARCHIVE_MAP"], "function_calls": ["get_logger", "_set_token_in_kwargs", "_set_token_in_kwargs"], "strings": [" KOSMOS-2 model configuration", "\n    This is the configuration class to store the configuration of a [`Kosmos2TextModel`]. It is used to instantiate a\n    KOSMOS-2 text decoder according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the text decoder of the KOSMOS-2\n    [microsoft/kosmos-2-patch14-224](https://huggingface.co/microsoft/kosmos-2-patch14-224) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        vocab_size (`int`, *optional*, defaults to 65037):\n            Vocabulary size of the Kosmos2 model. Defines the number of different tokens that can be represented by the\n            `inputs_ids` passed when calling [`Kosmos2Model`].\n        max_position_embeddings (`int`, *optional*, defaults to 2048):\n            The maximum sequence length that this model might ever be used with. Typically set this to something large\n            just in case (e.g., 512 or 1024 or 2048).\n        embed_dim (`int`, *optional*, defaults to 2048):\n            Dimensionality of the layers and the pooler layer.\n        layers (`int`, *optional*, defaults to 24):\n            Number of hidden layers in the Transformer encoder.\n        ffn_dim (`int`, *optional*, defaults to 8192):\n            Dimensionality of the \"intermediate\" (often named feed-forward) layer in the Transformer encoder.\n        attention_heads (`int`, *optional*, defaults to 32):\n            Number of attention heads for each attention layer in the Transformer encoder.\n        activation_function (`str` or `function`, *optional*, defaults to `\"gelu\"`):\n            The non-linear activation function (function or string) in the encoder and pooler. If string, `\"gelu\"`,\n            `\"relu\"`, `\"silu\"` and `\"gelu_new\"` are supported.\n        dropout (`float`, *optional*, defaults to 0.1):\n            The dropout probability for all fully connected layers in the embeddings, encoder, and pooler.\n        attention_dropout (`float`, *optional*, defaults to 0.1):\n            The dropout ratio for the attention probabilities.\n        activation_dropout (`float`, *optional*, defaults to 0.0):\n            The dropout ratio for activations inside the fully connected layer.\n        layerdrop (`float`, *optional*, defaults to 0.0):\n            The LayerDrop probability for the decoder. See the [LayerDrop paper](see https://arxiv.org/abs/1909.11556)\n            for more details.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-5):\n            The epsilon used by the layer normalization layers.\n        init_std (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        scale_embedding (`bool`, *optional*, defaults to `True`):\n            Scale embeddings by diving by sqrt(embed_dim).\n        use_cache (`bool`, *optional*, defaults to `True`):\n            Whether or not the model should return the last key/values attentions (not used by all models).\n    ```", "kosmos_2_text_model", "\n    This is the configuration class to store the configuration of a [`Kosmos2VisionModel`]. It is used to instantiate a\n    KOSMOS-2 vision encoder according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the vision encoder of the KOSMOS-2\n    [microsoft/kosmos-2-patch14-224](https://huggingface.co/microsoft/kosmos-2-patch14-224) architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        hidden_size (`int`, *optional*, defaults to 1024):\n            Dimensionality of the encoder layers and the pooler layer.\n        intermediate_size (`int`, *optional*, defaults to 4096):\n            Dimensionality of the \"intermediate\" (i.e., feed-forward) layer in the Transformer encoder.\n        num_hidden_layers (`int`, *optional*, defaults to 24):\n            Number of hidden layers in the Transformer encoder.\n        num_attention_heads (`int`, *optional*, defaults to 16):\n            Number of attention heads for each attention layer in the Transformer encoder.\n        num_channels (`int`, *optional*, defaults to 3):\n            The number of input channels.\n        image_size (`int`, *optional*, defaults to 224):\n            The size (resolution) of each image.\n        patch_size (`int`, *optional*, defaults to 14):\n            The size (resolution) of each patch.\n        hidden_act (`str` or `function`, *optional*, defaults to `\"quick_gelu\"`):\n            The non-linear activation function (function or string) in the encoder and pooler. If string, `\"gelu\"`,\n            `\"relu\"`, `\"selu\"` and `\"gelu_new\"` ``\"quick_gelu\"` are supported.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-5):\n            The epsilon used by the layer normalization layers.\n        attention_dropout (`float`, *optional*, defaults to 0.0):\n            The dropout ratio for the attention probabilities.\n        initializer_range (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        initializer_factor (`float`, *optional*, defaults to 1):\n            A factor for initializing all weight matrices (should be kept to 1, used internally for initialization\n            testing).\n    ```", "kosmos_2_vision_model", "\n    This is the configuration class to store the configuration of a [`Kosmos2Model`]. It is used to instantiate a\n    KOSMOS-2 model according to the specified arguments, defining the model architecture. Instantiating a configuration\n    with the defaults will yield a similar configuration to that of the KOSMOS-2\n    [microsoft/kosmos-2-patch14-224](https://huggingface.co/microsoft/kosmos-2-patch14-224) architecture.\n\n    Args:\n        text_config (`dict`, *optional*):\n            Dictionary of configuration options used to initialize [`Kosmos2TextConfig`].\n        vision_config (`dict`, *optional*):\n            Dictionary of configuration options used to initialize [`Kosmos2VisionConfig`].\n        latent_query_num (`int`, *optional*, defaults to 64):\n            The number of latent query tokens that represent the image features used in the text decoder component.\n        kwargs (*optional*):\n            Dictionary of keyword arguments.\n\n    Example:\n\n    ```python\n    >>> from transformers import Kosmos2Config, Kosmos2Model\n\n    >>> # Initializing a Kosmos-2 kosmos-2-patch14-224 style configuration\n    >>> configuration = Kosmos2Config()\n\n    >>> # Initializing a model (with random weights) from the kosmos-2-patch14-224 style configuration\n    >>> model = Kosmos2Model(configuration)\n\n    >>> # Accessing the model configuration\n    >>> configuration = model.config\n    ```", "kosmos-2", "past_key_values", "num_attention_heads", "hidden_size", "num_hidden_layers", "attention_heads", "embed_dim", "layers", "gelu", "quick_gelu"]}