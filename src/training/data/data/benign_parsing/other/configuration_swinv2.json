{"imports": ["PretrainedConfig", "logging", "BackboneConfigMixin", "get_aligned_output_features_output_indices", "SWINV2_PRETRAINED_CONFIG_ARCHIVE_MAP"], "function_calls": ["get_logger"], "strings": [" Swinv2 Transformer model configuration", "\n    This is the configuration class to store the configuration of a [`Swinv2Model`]. It is used to instantiate a Swin\n    Transformer v2 model according to the specified arguments, defining the model architecture. Instantiating a\n    configuration with the defaults will yield a similar configuration to that of the Swin Transformer v2\n    [microsoft/swinv2-tiny-patch4-window8-256](https://huggingface.co/microsoft/swinv2-tiny-patch4-window8-256)\n    architecture.\n\n    Configuration objects inherit from [`PretrainedConfig`] and can be used to control the model outputs. Read the\n    documentation from [`PretrainedConfig`] for more information.\n\n    Args:\n        image_size (`int`, *optional*, defaults to 224):\n            The size (resolution) of each image.\n        patch_size (`int`, *optional*, defaults to 4):\n            The size (resolution) of each patch.\n        num_channels (`int`, *optional*, defaults to 3):\n            The number of input channels.\n        embed_dim (`int`, *optional*, defaults to 96):\n            Dimensionality of patch embedding.\n        depths (`list(int)`, *optional*, defaults to `[2, 2, 6, 2]`):\n            Depth of each layer in the Transformer encoder.\n        num_heads (`list(int)`, *optional*, defaults to `[3, 6, 12, 24]`):\n            Number of attention heads in each layer of the Transformer encoder.\n        window_size (`int`, *optional*, defaults to 7):\n            Size of windows.\n        pretrained_window_sizes (`list(int)`, *optional*, defaults to `[0, 0, 0, 0]`):\n            Size of windows during pretraining.\n        mlp_ratio (`float`, *optional*, defaults to 4.0):\n            Ratio of MLP hidden dimensionality to embedding dimensionality.\n        qkv_bias (`bool`, *optional*, defaults to `True`):\n            Whether or not a learnable bias should be added to the queries, keys and values.\n        hidden_dropout_prob (`float`, *optional*, defaults to 0.0):\n            The dropout probability for all fully connected layers in the embeddings and encoder.\n        attention_probs_dropout_prob (`float`, *optional*, defaults to 0.0):\n            The dropout ratio for the attention probabilities.\n        drop_path_rate (`float`, *optional*, defaults to 0.1):\n            Stochastic depth rate.\n        hidden_act (`str` or `function`, *optional*, defaults to `\"gelu\"`):\n            The non-linear activation function (function or string) in the encoder. If string, `\"gelu\"`, `\"relu\"`,\n            `\"selu\"` and `\"gelu_new\"` are supported.\n        use_absolute_embeddings (`bool`, *optional*, defaults to `False`):\n            Whether or not to add absolute position embeddings to the patch embeddings.\n        initializer_range (`float`, *optional*, defaults to 0.02):\n            The standard deviation of the truncated_normal_initializer for initializing all weight matrices.\n        layer_norm_eps (`float`, *optional*, defaults to 1e-05):\n            The epsilon used by the layer normalization layers.\n        encoder_stride (`int`, *optional*, defaults to 32):\n            Factor to increase the spatial resolution by in the decoder head for masked image modeling.\n        out_features (`List[str]`, *optional*):\n            If used as backbone, list of features to output. Can be any of `\"stem\"`, `\"stage1\"`, `\"stage2\"`, etc.\n            (depending on how many stages the model has). If unset and `out_indices` is set, will default to the\n            corresponding stages. If unset and `out_indices` is unset, will default to the last stage.\n        out_indices (`List[int]`, *optional*):\n            If used as backbone, list of indices of features to output. Can be any of 0, 1, 2, etc. (depending on how\n            many stages the model has). If unset and `out_features` is set, will default to the corresponding stages.\n            If unset and `out_features` is unset, will default to the last stage.\n\n    Example:\n\n    ```python\n    >>> from transformers import Swinv2Config, Swinv2Model\n\n    >>> # Initializing a Swinv2 microsoft/swinv2-tiny-patch4-window8-256 style configuration\n    >>> configuration = Swinv2Config()\n\n    >>> # Initializing a model (with random weights) from the microsoft/swinv2-tiny-patch4-window8-256 style configuration\n    >>> model = Swinv2Model(configuration)\n\n    >>> # Accessing the model configuration\n    >>> configuration = model.config\n    ```", "swinv2", "num_attention_heads", "num_hidden_layers", "num_heads", "num_layers", "gelu"]}