{"imports": ["ProcessorMixin"], "function_calls": ["__init__", "pop", "pop", "pop", "pop", "pop", "pop", "pop", "pop", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "super"], "strings": ["Speech processor class for SpeechT5.", "\n    Constructs a SpeechT5 processor which wraps a feature extractor and a tokenizer into a single processor.\n\n    [`SpeechT5Processor`] offers all the functionalities of [`SpeechT5FeatureExtractor`] and [`SpeechT5Tokenizer`]. See\n    the docstring of [`~SpeechT5Processor.__call__`] and [`~SpeechT5Processor.decode`] for more information.\n\n    Args:\n        feature_extractor (`SpeechT5FeatureExtractor`):\n            An instance of [`SpeechT5FeatureExtractor`]. The feature extractor is a required input.\n        tokenizer (`SpeechT5Tokenizer`):\n            An instance of [`SpeechT5Tokenizer`]. The tokenizer is a required input.\n    ", "SpeechT5FeatureExtractor", "SpeechT5Tokenizer", "\n        Processes audio and text input, as well as audio and text targets.\n\n        You can process audio by using the argument `audio`, or process audio targets by using the argument\n        `audio_target`. This forwards the arguments to SpeechT5FeatureExtractor's\n        [`~SpeechT5FeatureExtractor.__call__`].\n\n        You can process text by using the argument `text`, or process text labels by using the argument `text_target`.\n        This forwards the arguments to SpeechT5Tokenizer's [`~SpeechT5Tokenizer.__call__`].\n\n        Valid input combinations are:\n\n        - `text` only\n        - `audio` only\n        - `text_target` only\n        - `audio_target` only\n        - `text` and `audio_target`\n        - `audio` and `audio_target`\n        - `text` and `text_target`\n        - `audio` and `text_target`\n\n        Please refer to the docstring of the above two methods for more information.\n        ", "\n        Collates the audio and text inputs, as well as their targets, into a padded batch.\n\n        Audio inputs are padded by SpeechT5FeatureExtractor's [`~SpeechT5FeatureExtractor.pad`]. Text inputs are padded\n        by SpeechT5Tokenizer's [`~SpeechT5Tokenizer.pad`].\n\n        Valid input combinations are:\n\n        - `input_ids` only\n        - `input_values` only\n        - `labels` only, either log-mel spectrograms or text tokens\n        - `input_ids` and log-mel spectrogram `labels`\n        - `input_values` and text `labels`\n\n        Please refer to the docstring of the above two methods for more information.\n        ", "\n        This method forwards all its arguments to SpeechT5Tokenizer's [`~SpeechT5Tokenizer.batch_decode`]. Please refer\n        to the docstring of this method for more information.\n        ", "\n        This method forwards all its arguments to SpeechT5Tokenizer's [`~SpeechT5Tokenizer.decode`]. Please refer to\n        the docstring of this method for more information.\n        ", "audio", "text", "text_target", "audio_target", "sampling_rate", "input_values", "input_ids", "labels", "Cannot process both `audio` and `text` inputs. Did you mean `audio_target` or `text_target`?", "Cannot process both `audio_target` and `text_target` inputs. Did you mean `audio` or `text`?", "You need to specify either an `audio`, `audio_target`, `text`, or `text_target` input to process.", "Cannot process both `input_values` and `input_ids` inputs.", "You need to specify either an `input_values`, `input_ids`, or `labels` input to be padded."]}