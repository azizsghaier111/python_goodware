{"imports": ["Formatter", "codes", "ansicolors"], "function_calls": ["len", "escape", "escape", "escape", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "range", "range", "range", "get", "write", "format", "append", "append", "append", "extend", "extend", "append", "append", "append", "append", "append", "append", "append", "append", "EscapeSequence", "_write_lineno", "EscapeSequence", "append", "extend", "append", "extend", "_color_index", "_color_index", "str", "color_string", "reset_string", "_color_tuple", "_color_tuple", "str", "true_color_string", "reset_string", "join", "replace", "replace", "str", "str", "str", "str", "str", "str", "str", "_color_index", "_color_index", "int"], "strings": ["\n    pygments.formatters.terminal256\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    Formatter for 256-color terminal output with ANSI sequences.\n\n    RGB-to-XTERM color conversion routines adapted from xterm256-conv\n    tool (http://frexx.de/xterm-256-notes/data/xterm256-conv2.tar.bz2)\n    by Wolfgang Frisch.\n\n    Formatter version 1.\n\n    :copyright: Copyright 2006-2024 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n", "Terminal256Formatter", "TerminalTrueColorFormatter", "\n    Format tokens with ANSI color sequences, for output in a 256-color\n    terminal or console.  Like in `TerminalFormatter` color sequences\n    are terminated at newlines, so that paging the output works correctly.\n\n    The formatter takes colors from a style defined by the `style` option\n    and converts them to nearest ANSI 256-color escape sequences. Bold and\n    underline attributes from the style are preserved (and displayed).\n\n    .. versionadded:: 0.9\n\n    .. versionchanged:: 2.2\n       If the used style defines foreground colors in the form ``#ansi*``, then\n       `Terminal256Formatter` will map these to non extended foreground color.\n       See :ref:`AnsiTerminalStyle` for more information.\n\n    .. versionchanged:: 2.4\n       The ANSI color names have been updated with names that are easier to\n       understand and align with colornames of other projects and terminals.\n       See :ref:`this table <new-ansi-color-names>` for more information.\n\n\n    Options accepted:\n\n    `style`\n        The style to use, can be a string or a Style subclass (default:\n        ``'default'``).\n\n    `linenos`\n        Set to ``True`` to have line numbers on the terminal output as well\n        (default: ``False`` = no line numbers).\n    ", "Terminal256", "\n    Format tokens with ANSI color sequences, for output in a true-color\n    terminal or console.  Like in `TerminalFormatter` color sequences\n    are terminated at newlines, so that paging the output works correctly.\n\n    .. versionadded:: 2.1\n\n    Options accepted:\n\n    `style`\n        The style to use, can be a string or a Style subclass (default:\n        ``'default'``).\n    ", "TerminalTrueColor", "terminal256", "console256", "256", "terminal16m", "console16m", "16m", "\n", "m", "01", "04", "03", "01", "04", "03", "39", "49", "00", "ansicolor", "bgansicolor", "%s%04d: ", "color", "bgcolor", "\u001b[", ";01m", "38", "2", "48", "2", "color", "bgcolor", "bold", "underline", "italic", "", "bold", "underline", "italic", "ansi", "", "38", "5", "ansi", "", "48", "5", "ansicolor", "bgansicolor", "color", "bgcolor", ";", "%i", "%i", "color", "bgcolor"]}