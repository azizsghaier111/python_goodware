{"imports": ["_core"], "function_calls": ["create_ufunc"], "strings": ["\n#include <cupy/math_constants.h>\n__constant__ double EUL = 0.5772156649015328;\n", "\ntemplate <typename T>\nstatic __device__ T exp1(T x) {\n    if (x == 0) {\n        return CUDART_INF;\n    } else if (x <= 1) {\n        T e1 = 1.0;\n        T R = 1.0;\n\n        for (int k = 1; k <= 25; k++) {\n            int den = (k + 1) * (k + 1);\n            R = -R * k * x / den;\n            e1 += R;\n        }\n        return -EUL - log(x) + x * e1;\n    }\n\n    int M = 20 + 80.0 / x;\n    T t0 = 0;\n    for (int k = M; k != 0; k--) {\n        t0 = k / (1.0 + k / (x + t0));\n    }\n    T t = 1.0 / (x + t0);\n    return exp(-x) * t;\n}\n", "cupyx_scipy_special_exp1", "out0 = exp1(in0)", "Exponential integral E1.\n\n    Parameters\n    ----------\n    x : cupy.ndarray\n        Real argument\n\n    Returns\n    -------\n    y : scalar or cupy.ndarray\n        Values of the exponential integral E1\n\n    See Also\n    --------\n    :func:`scipy.special.exp1`\n\n    ", "f->f", "d->d", "preamble", "doc"]}