{"imports": ["torch", "numpy", "pytorch_lightning", "TestCase", "patch", "Dataset", "DataLoader", "functional"], "function_calls": ["Trainer", "WheelModel", "fit", "TestWheelModel", "test_model", "rand", "__init__", "Linear", "layer", "mse_loss", "compute_loss", "TrainResult", "log", "compute_loss", "EvalResult", "log", "Adam", "DataLoader", "DataLoader", "Trainer", "fit", "assertTrue", "assert_called_once_with", "patch", "layer", "parameters", "WheelDataset", "WheelDataset", "super"], "strings": ["This class is used to create a dummy dataset using PyTorch's Dataset class.", "This class is used to create a PyTorch model using PyTorch Lightning's LightningModule class.", "This class is used to test the implementation of the model.", "__main__", "Initialize the class with size and length of data.", "Get elements of dataset as per the index.", "Get the length of dataset.", "Initialize the class and layers of neural network.", "Define the forward pass.", "Calculate the loss using Mean Square Error Loss function.", "Define the training steps.", "Define the validation steps.", "Define the optimizer for the model.", "Define the training dataloader.", "Define the testing dataloader.", "This method is used to test the model.", "train_loss", "val_loss", "__main__.WheelModel", "max_epochs", "checkpoint_on", "lr", "dataset", "batch_size", "dataset", "batch_size", "max_epochs", "autospec"]}