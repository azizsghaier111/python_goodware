{"imports": ["imageio", "numpy", "Image", "ImageFilter", "ImageEnhance", "os", "mock"], "function_calls": ["ImageProcessor", "read_image", "print", "to_numpy", "print", "post_processing", "read_image", "print", "resize_image", "read_image", "print", "save_image", "print"], "strings": ["\n    A class used to perform several operations on images.\n\n    Attributes\n    ----------\n    image_file : str\n        the name (and path if necessary) of the image file\n    image : object\n        the image object\n    image_np : ndarray\n        the image converted into a numpy array\n    ", "__main__", "\n        Init method is used to initialize the basic attributes for the class.\n\n        :param image_file: str\n            the name (and path if necessary) of the image file\n        ", "\n        This method helps to read the image file using the Pillow library.\n\n        :return: object\n            returns the image object\n        ", "\n        This method helps to convert the image into numpy array.\n\n        :return: ndarray\n            returns the image in numpy array format\n        ", "\n        This method performs post processing operations on image.\n\n        :param filter_operation: ImageFilter\n            operation to be performed on image\n        :return: object\n            returns the processed image object\n        ", "\n        This method resizes the image to given size.\n\n        :param size: tuple\n            size to resize the image\n        :return: object\n            returns the resized image object\n        ", "\n        This method saves the image at given file path.\n\n        :param file_path: str\n            file path to save the image\n        ", "test.jpg", "Image:", "Image in Numpy Array:", "Blurred Image:", "Resized Image:", "output.jpg", "Image Saved Successfully"]}