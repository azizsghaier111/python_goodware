{"imports": ["imageio", "numpy", "Image", "ImageFilter", "ImageTransform", "os", "mock"], "function_calls": ["ImageProcessor", "lazy_read", "print", "to_numpy", "print", "post_processing", "print", "translate", "print", "print", "resize", "print", "print", "save_image", "print", "print", "read_multi_page", "main", "array", "fromarray", "filter", "array", "fromarray", "transform", "array", "fromarray", "resize", "array", "splitext", "imwrite", "imread", "lazy_read", "to_numpy", "to_numpy", "AffineTransform", "to_numpy", "exists", "makedirs", "basename", "open", "range", "lower", "seek", "array", "print"], "strings": ["Main function for testing", "test.tiff", "./output", "__main__", "Initialize with an image file path", "Read the image lazily, if it's not already done", "Convert the image to a numpy array if necessary", "Post-process the image using Pillow filters", "Translate the image along the dimensions", "Resize the image to new dimensions", "Save the image to a specific directory with a specified format", "Read a multi-page TIF image, frame by frame", "Read Image:\n", "\nImage as Numpy Array:\n", "\nPost-processed Image as Numpy Array:\n", "\nTranslated Image:", "\nResized Image:", "JPEG", "\nReading Multi-page Image:", "JPEG", "/", ".", ".tif", "The given image file is not multi-page", "\nImage saved to ", "format", "format", "translation", "Page ", ":\n "]}