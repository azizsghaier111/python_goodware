{"imports": ["torch", "nn", "optim", "numpy"], "function_calls": ["MSELoss", "SGD", "range", "randn", "float", "NeuralNetwork", "empty", "empty", "range", "print", "train_model", "print", "eval", "main", "__init__", "Linear", "Linear", "Linear", "relu", "relu", "sigmoid", "parameters", "model", "criterion", "zero_grad", "backward", "step", "convert_numpy_to_torch", "convert_numpy_to_torch", "no_grad", "full", "print", "print", "layer1", "layer2", "layer3", "print", "from_numpy", "initialize_weight_variable", "initialize_weight_variable", "super", "format", "item", "model"], "strings": ["__main__", "Start training the model...", "Training completed!", "lr", "Example input:\n ", "Model output:\n ", "Epoch [{}/{}], Loss: {:.4f}"]}